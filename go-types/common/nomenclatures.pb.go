// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: common/nomenclatures.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CampaignState int32

const (
	CampaignState_UndefinedCampaign       CampaignState = 0
	CampaignState_Draft                   CampaignState = 1
	CampaignState_PendingValidation       CampaignState = 2
	CampaignState_Approved                CampaignState = 3
	CampaignState_Rejected                CampaignState = 4
	CampaignState_Active                  CampaignState = 5
	CampaignState_ActivePendingValidation CampaignState = 6
	CampaignState_Suspended               CampaignState = 7
	CampaignState_Complete                CampaignState = 8
	CampaignState_Disabled                CampaignState = 9
	CampaignState_Error                   CampaignState = 10
)

// Enum value maps for CampaignState.
var (
	CampaignState_name = map[int32]string{
		0:  "UndefinedCampaign",
		1:  "Draft",
		2:  "PendingValidation",
		3:  "Approved",
		4:  "Rejected",
		5:  "Active",
		6:  "ActivePendingValidation",
		7:  "Suspended",
		8:  "Complete",
		9:  "Disabled",
		10: "Error",
	}
	CampaignState_value = map[string]int32{
		"UndefinedCampaign":       0,
		"Draft":                   1,
		"PendingValidation":       2,
		"Approved":                3,
		"Rejected":                4,
		"Active":                  5,
		"ActivePendingValidation": 6,
		"Suspended":               7,
		"Complete":                8,
		"Disabled":                9,
		"Error":                   10,
	}
)

func (x CampaignState) Enum() *CampaignState {
	p := new(CampaignState)
	*p = x
	return p
}

func (x CampaignState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CampaignState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_nomenclatures_proto_enumTypes[0].Descriptor()
}

func (CampaignState) Type() protoreflect.EnumType {
	return &file_common_nomenclatures_proto_enumTypes[0]
}

func (x CampaignState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CampaignState.Descriptor instead.
func (CampaignState) EnumDescriptor() ([]byte, []int) {
	return file_common_nomenclatures_proto_rawDescGZIP(), []int{0}
}

type ISO2CountryCode int32

const (
	ISO2CountryCode_UNDEFINED_ISO2_CODE ISO2CountryCode = 0
	ISO2CountryCode_AD                  ISO2CountryCode = 1
	ISO2CountryCode_AE                  ISO2CountryCode = 2
	ISO2CountryCode_AF                  ISO2CountryCode = 3
	ISO2CountryCode_AG                  ISO2CountryCode = 4
	ISO2CountryCode_AI                  ISO2CountryCode = 5
	ISO2CountryCode_AL                  ISO2CountryCode = 6
	ISO2CountryCode_AM                  ISO2CountryCode = 7
	ISO2CountryCode_AO                  ISO2CountryCode = 8
	ISO2CountryCode_AQ                  ISO2CountryCode = 9
	ISO2CountryCode_AR                  ISO2CountryCode = 10
	ISO2CountryCode_AS                  ISO2CountryCode = 11
	ISO2CountryCode_AT                  ISO2CountryCode = 12
	ISO2CountryCode_AU                  ISO2CountryCode = 13
	ISO2CountryCode_AW                  ISO2CountryCode = 14
	ISO2CountryCode_AX                  ISO2CountryCode = 15
	ISO2CountryCode_AZ                  ISO2CountryCode = 16
	ISO2CountryCode_BA                  ISO2CountryCode = 17
	ISO2CountryCode_BB                  ISO2CountryCode = 18
	ISO2CountryCode_BD                  ISO2CountryCode = 19
	ISO2CountryCode_BE                  ISO2CountryCode = 20
	ISO2CountryCode_BF                  ISO2CountryCode = 21
	ISO2CountryCode_BG                  ISO2CountryCode = 22
	ISO2CountryCode_BH                  ISO2CountryCode = 23
	ISO2CountryCode_BI                  ISO2CountryCode = 24
	ISO2CountryCode_BJ                  ISO2CountryCode = 25
	ISO2CountryCode_BL                  ISO2CountryCode = 26
	ISO2CountryCode_BM                  ISO2CountryCode = 27
	ISO2CountryCode_BN                  ISO2CountryCode = 28
	ISO2CountryCode_BO                  ISO2CountryCode = 29
	ISO2CountryCode_BQ                  ISO2CountryCode = 30
	ISO2CountryCode_BR                  ISO2CountryCode = 31
	ISO2CountryCode_BS                  ISO2CountryCode = 32
	ISO2CountryCode_BT                  ISO2CountryCode = 33
	ISO2CountryCode_BV                  ISO2CountryCode = 34
	ISO2CountryCode_BW                  ISO2CountryCode = 35
	ISO2CountryCode_BY                  ISO2CountryCode = 36
	ISO2CountryCode_BZ                  ISO2CountryCode = 37
	ISO2CountryCode_CA                  ISO2CountryCode = 38
	ISO2CountryCode_CC                  ISO2CountryCode = 39
	ISO2CountryCode_CD                  ISO2CountryCode = 40
	ISO2CountryCode_CF                  ISO2CountryCode = 41
	ISO2CountryCode_CG                  ISO2CountryCode = 42
	ISO2CountryCode_CH                  ISO2CountryCode = 43
	ISO2CountryCode_CI                  ISO2CountryCode = 44
	ISO2CountryCode_CK                  ISO2CountryCode = 45
	ISO2CountryCode_CL                  ISO2CountryCode = 46
	ISO2CountryCode_CM                  ISO2CountryCode = 47
	ISO2CountryCode_CN                  ISO2CountryCode = 48
	ISO2CountryCode_CO                  ISO2CountryCode = 49
	ISO2CountryCode_CR                  ISO2CountryCode = 50
	ISO2CountryCode_CU                  ISO2CountryCode = 51
	ISO2CountryCode_CV                  ISO2CountryCode = 52
	ISO2CountryCode_CW                  ISO2CountryCode = 53
	ISO2CountryCode_CX                  ISO2CountryCode = 54
	ISO2CountryCode_CY                  ISO2CountryCode = 55
	ISO2CountryCode_CZ                  ISO2CountryCode = 56
	ISO2CountryCode_DE                  ISO2CountryCode = 57
	ISO2CountryCode_DJ                  ISO2CountryCode = 58
	ISO2CountryCode_DK                  ISO2CountryCode = 59
	ISO2CountryCode_DM                  ISO2CountryCode = 60
	ISO2CountryCode_DO                  ISO2CountryCode = 61
	ISO2CountryCode_DZ                  ISO2CountryCode = 62
	ISO2CountryCode_EC                  ISO2CountryCode = 63
	ISO2CountryCode_EE                  ISO2CountryCode = 64
	ISO2CountryCode_EG                  ISO2CountryCode = 65
	ISO2CountryCode_EH                  ISO2CountryCode = 66
	ISO2CountryCode_ER                  ISO2CountryCode = 67
	ISO2CountryCode_ES                  ISO2CountryCode = 68
	ISO2CountryCode_ET                  ISO2CountryCode = 69
	ISO2CountryCode_FI                  ISO2CountryCode = 70
	ISO2CountryCode_FJ                  ISO2CountryCode = 71
	ISO2CountryCode_FK                  ISO2CountryCode = 72
	ISO2CountryCode_FM                  ISO2CountryCode = 73
	ISO2CountryCode_FO                  ISO2CountryCode = 74
	ISO2CountryCode_FR                  ISO2CountryCode = 75
	ISO2CountryCode_GA                  ISO2CountryCode = 76
	ISO2CountryCode_GB                  ISO2CountryCode = 77
	ISO2CountryCode_GD                  ISO2CountryCode = 78
	ISO2CountryCode_GE                  ISO2CountryCode = 79
	ISO2CountryCode_GF                  ISO2CountryCode = 80
	ISO2CountryCode_GG                  ISO2CountryCode = 81
	ISO2CountryCode_GH                  ISO2CountryCode = 82
	ISO2CountryCode_GI                  ISO2CountryCode = 83
	ISO2CountryCode_GL                  ISO2CountryCode = 84
	ISO2CountryCode_GM                  ISO2CountryCode = 85
	ISO2CountryCode_GN                  ISO2CountryCode = 86
	ISO2CountryCode_GP                  ISO2CountryCode = 87
	ISO2CountryCode_GQ                  ISO2CountryCode = 88
	ISO2CountryCode_GR                  ISO2CountryCode = 89
	ISO2CountryCode_GS                  ISO2CountryCode = 90
	ISO2CountryCode_GT                  ISO2CountryCode = 91
	ISO2CountryCode_GU                  ISO2CountryCode = 92
	ISO2CountryCode_GW                  ISO2CountryCode = 93
	ISO2CountryCode_GY                  ISO2CountryCode = 94
	ISO2CountryCode_HK                  ISO2CountryCode = 95
	ISO2CountryCode_HM                  ISO2CountryCode = 96
	ISO2CountryCode_HN                  ISO2CountryCode = 97
	ISO2CountryCode_HR                  ISO2CountryCode = 98
	ISO2CountryCode_HT                  ISO2CountryCode = 99
	ISO2CountryCode_HU                  ISO2CountryCode = 100
	ISO2CountryCode_ID                  ISO2CountryCode = 101
	ISO2CountryCode_IE                  ISO2CountryCode = 102
	ISO2CountryCode_IL                  ISO2CountryCode = 103
	ISO2CountryCode_IM                  ISO2CountryCode = 104
	ISO2CountryCode_IN                  ISO2CountryCode = 105
	ISO2CountryCode_IO                  ISO2CountryCode = 106
	ISO2CountryCode_IQ                  ISO2CountryCode = 107
	ISO2CountryCode_IR                  ISO2CountryCode = 108
	ISO2CountryCode_IS                  ISO2CountryCode = 109
	ISO2CountryCode_IT                  ISO2CountryCode = 110
	ISO2CountryCode_JE                  ISO2CountryCode = 111
	ISO2CountryCode_JM                  ISO2CountryCode = 112
	ISO2CountryCode_JO                  ISO2CountryCode = 113
	ISO2CountryCode_JP                  ISO2CountryCode = 114
	ISO2CountryCode_KE                  ISO2CountryCode = 115
	ISO2CountryCode_KG                  ISO2CountryCode = 116
	ISO2CountryCode_KH                  ISO2CountryCode = 117
	ISO2CountryCode_KI                  ISO2CountryCode = 118
	ISO2CountryCode_KM                  ISO2CountryCode = 119
	ISO2CountryCode_KN                  ISO2CountryCode = 120
	ISO2CountryCode_KP                  ISO2CountryCode = 121
	ISO2CountryCode_KR                  ISO2CountryCode = 122
	ISO2CountryCode_KW                  ISO2CountryCode = 123
	ISO2CountryCode_KY                  ISO2CountryCode = 124
	ISO2CountryCode_KZ                  ISO2CountryCode = 125
	ISO2CountryCode_LA                  ISO2CountryCode = 126
	ISO2CountryCode_LB                  ISO2CountryCode = 127
	ISO2CountryCode_LC                  ISO2CountryCode = 128
	ISO2CountryCode_LI                  ISO2CountryCode = 129
	ISO2CountryCode_LK                  ISO2CountryCode = 130
	ISO2CountryCode_LR                  ISO2CountryCode = 131
	ISO2CountryCode_LS                  ISO2CountryCode = 132
	ISO2CountryCode_LT                  ISO2CountryCode = 133
	ISO2CountryCode_LU                  ISO2CountryCode = 134
	ISO2CountryCode_LV                  ISO2CountryCode = 135
	ISO2CountryCode_LY                  ISO2CountryCode = 136
	ISO2CountryCode_MA                  ISO2CountryCode = 137
	ISO2CountryCode_MC                  ISO2CountryCode = 138
	ISO2CountryCode_MD                  ISO2CountryCode = 139
	ISO2CountryCode_ME                  ISO2CountryCode = 140
	ISO2CountryCode_MF                  ISO2CountryCode = 141
	ISO2CountryCode_MG                  ISO2CountryCode = 142
	ISO2CountryCode_MH                  ISO2CountryCode = 143
	ISO2CountryCode_MK                  ISO2CountryCode = 144
	ISO2CountryCode_ML                  ISO2CountryCode = 145
	ISO2CountryCode_MM                  ISO2CountryCode = 146
	ISO2CountryCode_MN                  ISO2CountryCode = 147
	ISO2CountryCode_MO                  ISO2CountryCode = 148
	ISO2CountryCode_MP                  ISO2CountryCode = 149
	ISO2CountryCode_MQ                  ISO2CountryCode = 150
	ISO2CountryCode_MR                  ISO2CountryCode = 151
	ISO2CountryCode_MS                  ISO2CountryCode = 152
	ISO2CountryCode_MT                  ISO2CountryCode = 153
	ISO2CountryCode_MU                  ISO2CountryCode = 154
	ISO2CountryCode_MV                  ISO2CountryCode = 155
	ISO2CountryCode_MW                  ISO2CountryCode = 156
	ISO2CountryCode_MX                  ISO2CountryCode = 157
	ISO2CountryCode_MY                  ISO2CountryCode = 158
	ISO2CountryCode_MZ                  ISO2CountryCode = 159
	ISO2CountryCode_NA                  ISO2CountryCode = 160
	ISO2CountryCode_NC                  ISO2CountryCode = 161
	ISO2CountryCode_NE                  ISO2CountryCode = 162
	ISO2CountryCode_NF                  ISO2CountryCode = 163
	ISO2CountryCode_NG                  ISO2CountryCode = 164
	ISO2CountryCode_NI                  ISO2CountryCode = 165
	ISO2CountryCode_NL                  ISO2CountryCode = 166
	ISO2CountryCode_NO                  ISO2CountryCode = 167
	ISO2CountryCode_NP                  ISO2CountryCode = 168
	ISO2CountryCode_NR                  ISO2CountryCode = 169
	ISO2CountryCode_NU                  ISO2CountryCode = 170
	ISO2CountryCode_NZ                  ISO2CountryCode = 171
	ISO2CountryCode_OM                  ISO2CountryCode = 172
	ISO2CountryCode_PA                  ISO2CountryCode = 173
	ISO2CountryCode_PE                  ISO2CountryCode = 174
	ISO2CountryCode_PF                  ISO2CountryCode = 175
	ISO2CountryCode_PG                  ISO2CountryCode = 176
	ISO2CountryCode_PH                  ISO2CountryCode = 177
	ISO2CountryCode_PK                  ISO2CountryCode = 178
	ISO2CountryCode_PL                  ISO2CountryCode = 179
	ISO2CountryCode_PM                  ISO2CountryCode = 180
	ISO2CountryCode_PN                  ISO2CountryCode = 181
	ISO2CountryCode_PR                  ISO2CountryCode = 182
	ISO2CountryCode_PS                  ISO2CountryCode = 183
	ISO2CountryCode_PT                  ISO2CountryCode = 184
	ISO2CountryCode_PW                  ISO2CountryCode = 185
	ISO2CountryCode_PY                  ISO2CountryCode = 186
	ISO2CountryCode_QA                  ISO2CountryCode = 187
	ISO2CountryCode_RE                  ISO2CountryCode = 188
	ISO2CountryCode_RO                  ISO2CountryCode = 189
	ISO2CountryCode_RS                  ISO2CountryCode = 190
	ISO2CountryCode_RU                  ISO2CountryCode = 191
	ISO2CountryCode_RW                  ISO2CountryCode = 192
	ISO2CountryCode_SA                  ISO2CountryCode = 193
	ISO2CountryCode_SB                  ISO2CountryCode = 194
	ISO2CountryCode_SC                  ISO2CountryCode = 195
	ISO2CountryCode_SD                  ISO2CountryCode = 196
	ISO2CountryCode_SE                  ISO2CountryCode = 197
	ISO2CountryCode_SG                  ISO2CountryCode = 198
	ISO2CountryCode_SH                  ISO2CountryCode = 199
	ISO2CountryCode_SI                  ISO2CountryCode = 200
	ISO2CountryCode_SJ                  ISO2CountryCode = 201
	ISO2CountryCode_SK                  ISO2CountryCode = 202
	ISO2CountryCode_SL                  ISO2CountryCode = 203
	ISO2CountryCode_SM                  ISO2CountryCode = 204
	ISO2CountryCode_SN                  ISO2CountryCode = 205
	ISO2CountryCode_SO                  ISO2CountryCode = 206
	ISO2CountryCode_SR                  ISO2CountryCode = 207
	ISO2CountryCode_SS                  ISO2CountryCode = 208
	ISO2CountryCode_ST                  ISO2CountryCode = 209
	ISO2CountryCode_SV                  ISO2CountryCode = 210
	ISO2CountryCode_SX                  ISO2CountryCode = 211
	ISO2CountryCode_SY                  ISO2CountryCode = 212
	ISO2CountryCode_SZ                  ISO2CountryCode = 213
	ISO2CountryCode_TC                  ISO2CountryCode = 214
	ISO2CountryCode_TD                  ISO2CountryCode = 215
	ISO2CountryCode_TF                  ISO2CountryCode = 216
	ISO2CountryCode_TG                  ISO2CountryCode = 217
	ISO2CountryCode_TH                  ISO2CountryCode = 218
	ISO2CountryCode_TJ                  ISO2CountryCode = 219
	ISO2CountryCode_TK                  ISO2CountryCode = 220
	ISO2CountryCode_TL                  ISO2CountryCode = 221
	ISO2CountryCode_TM                  ISO2CountryCode = 222
	ISO2CountryCode_TN                  ISO2CountryCode = 223
	ISO2CountryCode_TO                  ISO2CountryCode = 224
	ISO2CountryCode_TR                  ISO2CountryCode = 225
	ISO2CountryCode_TT                  ISO2CountryCode = 226
	ISO2CountryCode_TV                  ISO2CountryCode = 227
	ISO2CountryCode_TW                  ISO2CountryCode = 228
	ISO2CountryCode_TZ                  ISO2CountryCode = 229
	ISO2CountryCode_UA                  ISO2CountryCode = 230
	ISO2CountryCode_UG                  ISO2CountryCode = 231
	ISO2CountryCode_UM                  ISO2CountryCode = 232
	ISO2CountryCode_US                  ISO2CountryCode = 233
	ISO2CountryCode_UY                  ISO2CountryCode = 234
	ISO2CountryCode_UZ                  ISO2CountryCode = 235
	ISO2CountryCode_VA                  ISO2CountryCode = 236
	ISO2CountryCode_VC                  ISO2CountryCode = 237
	ISO2CountryCode_VE                  ISO2CountryCode = 238
	ISO2CountryCode_VG                  ISO2CountryCode = 239
	ISO2CountryCode_VI                  ISO2CountryCode = 240
	ISO2CountryCode_VN                  ISO2CountryCode = 241
	ISO2CountryCode_VU                  ISO2CountryCode = 242
	ISO2CountryCode_WF                  ISO2CountryCode = 243
	ISO2CountryCode_WS                  ISO2CountryCode = 244
	ISO2CountryCode_YE                  ISO2CountryCode = 245
	ISO2CountryCode_YT                  ISO2CountryCode = 246
	ISO2CountryCode_ZA                  ISO2CountryCode = 247
	ISO2CountryCode_ZM                  ISO2CountryCode = 248
	ISO2CountryCode_ZW                  ISO2CountryCode = 249
)

// Enum value maps for ISO2CountryCode.
var (
	ISO2CountryCode_name = map[int32]string{
		0:   "UNDEFINED_ISO2_CODE",
		1:   "AD",
		2:   "AE",
		3:   "AF",
		4:   "AG",
		5:   "AI",
		6:   "AL",
		7:   "AM",
		8:   "AO",
		9:   "AQ",
		10:  "AR",
		11:  "AS",
		12:  "AT",
		13:  "AU",
		14:  "AW",
		15:  "AX",
		16:  "AZ",
		17:  "BA",
		18:  "BB",
		19:  "BD",
		20:  "BE",
		21:  "BF",
		22:  "BG",
		23:  "BH",
		24:  "BI",
		25:  "BJ",
		26:  "BL",
		27:  "BM",
		28:  "BN",
		29:  "BO",
		30:  "BQ",
		31:  "BR",
		32:  "BS",
		33:  "BT",
		34:  "BV",
		35:  "BW",
		36:  "BY",
		37:  "BZ",
		38:  "CA",
		39:  "CC",
		40:  "CD",
		41:  "CF",
		42:  "CG",
		43:  "CH",
		44:  "CI",
		45:  "CK",
		46:  "CL",
		47:  "CM",
		48:  "CN",
		49:  "CO",
		50:  "CR",
		51:  "CU",
		52:  "CV",
		53:  "CW",
		54:  "CX",
		55:  "CY",
		56:  "CZ",
		57:  "DE",
		58:  "DJ",
		59:  "DK",
		60:  "DM",
		61:  "DO",
		62:  "DZ",
		63:  "EC",
		64:  "EE",
		65:  "EG",
		66:  "EH",
		67:  "ER",
		68:  "ES",
		69:  "ET",
		70:  "FI",
		71:  "FJ",
		72:  "FK",
		73:  "FM",
		74:  "FO",
		75:  "FR",
		76:  "GA",
		77:  "GB",
		78:  "GD",
		79:  "GE",
		80:  "GF",
		81:  "GG",
		82:  "GH",
		83:  "GI",
		84:  "GL",
		85:  "GM",
		86:  "GN",
		87:  "GP",
		88:  "GQ",
		89:  "GR",
		90:  "GS",
		91:  "GT",
		92:  "GU",
		93:  "GW",
		94:  "GY",
		95:  "HK",
		96:  "HM",
		97:  "HN",
		98:  "HR",
		99:  "HT",
		100: "HU",
		101: "ID",
		102: "IE",
		103: "IL",
		104: "IM",
		105: "IN",
		106: "IO",
		107: "IQ",
		108: "IR",
		109: "IS",
		110: "IT",
		111: "JE",
		112: "JM",
		113: "JO",
		114: "JP",
		115: "KE",
		116: "KG",
		117: "KH",
		118: "KI",
		119: "KM",
		120: "KN",
		121: "KP",
		122: "KR",
		123: "KW",
		124: "KY",
		125: "KZ",
		126: "LA",
		127: "LB",
		128: "LC",
		129: "LI",
		130: "LK",
		131: "LR",
		132: "LS",
		133: "LT",
		134: "LU",
		135: "LV",
		136: "LY",
		137: "MA",
		138: "MC",
		139: "MD",
		140: "ME",
		141: "MF",
		142: "MG",
		143: "MH",
		144: "MK",
		145: "ML",
		146: "MM",
		147: "MN",
		148: "MO",
		149: "MP",
		150: "MQ",
		151: "MR",
		152: "MS",
		153: "MT",
		154: "MU",
		155: "MV",
		156: "MW",
		157: "MX",
		158: "MY",
		159: "MZ",
		160: "NA",
		161: "NC",
		162: "NE",
		163: "NF",
		164: "NG",
		165: "NI",
		166: "NL",
		167: "NO",
		168: "NP",
		169: "NR",
		170: "NU",
		171: "NZ",
		172: "OM",
		173: "PA",
		174: "PE",
		175: "PF",
		176: "PG",
		177: "PH",
		178: "PK",
		179: "PL",
		180: "PM",
		181: "PN",
		182: "PR",
		183: "PS",
		184: "PT",
		185: "PW",
		186: "PY",
		187: "QA",
		188: "RE",
		189: "RO",
		190: "RS",
		191: "RU",
		192: "RW",
		193: "SA",
		194: "SB",
		195: "SC",
		196: "SD",
		197: "SE",
		198: "SG",
		199: "SH",
		200: "SI",
		201: "SJ",
		202: "SK",
		203: "SL",
		204: "SM",
		205: "SN",
		206: "SO",
		207: "SR",
		208: "SS",
		209: "ST",
		210: "SV",
		211: "SX",
		212: "SY",
		213: "SZ",
		214: "TC",
		215: "TD",
		216: "TF",
		217: "TG",
		218: "TH",
		219: "TJ",
		220: "TK",
		221: "TL",
		222: "TM",
		223: "TN",
		224: "TO",
		225: "TR",
		226: "TT",
		227: "TV",
		228: "TW",
		229: "TZ",
		230: "UA",
		231: "UG",
		232: "UM",
		233: "US",
		234: "UY",
		235: "UZ",
		236: "VA",
		237: "VC",
		238: "VE",
		239: "VG",
		240: "VI",
		241: "VN",
		242: "VU",
		243: "WF",
		244: "WS",
		245: "YE",
		246: "YT",
		247: "ZA",
		248: "ZM",
		249: "ZW",
	}
	ISO2CountryCode_value = map[string]int32{
		"UNDEFINED_ISO2_CODE": 0,
		"AD":                  1,
		"AE":                  2,
		"AF":                  3,
		"AG":                  4,
		"AI":                  5,
		"AL":                  6,
		"AM":                  7,
		"AO":                  8,
		"AQ":                  9,
		"AR":                  10,
		"AS":                  11,
		"AT":                  12,
		"AU":                  13,
		"AW":                  14,
		"AX":                  15,
		"AZ":                  16,
		"BA":                  17,
		"BB":                  18,
		"BD":                  19,
		"BE":                  20,
		"BF":                  21,
		"BG":                  22,
		"BH":                  23,
		"BI":                  24,
		"BJ":                  25,
		"BL":                  26,
		"BM":                  27,
		"BN":                  28,
		"BO":                  29,
		"BQ":                  30,
		"BR":                  31,
		"BS":                  32,
		"BT":                  33,
		"BV":                  34,
		"BW":                  35,
		"BY":                  36,
		"BZ":                  37,
		"CA":                  38,
		"CC":                  39,
		"CD":                  40,
		"CF":                  41,
		"CG":                  42,
		"CH":                  43,
		"CI":                  44,
		"CK":                  45,
		"CL":                  46,
		"CM":                  47,
		"CN":                  48,
		"CO":                  49,
		"CR":                  50,
		"CU":                  51,
		"CV":                  52,
		"CW":                  53,
		"CX":                  54,
		"CY":                  55,
		"CZ":                  56,
		"DE":                  57,
		"DJ":                  58,
		"DK":                  59,
		"DM":                  60,
		"DO":                  61,
		"DZ":                  62,
		"EC":                  63,
		"EE":                  64,
		"EG":                  65,
		"EH":                  66,
		"ER":                  67,
		"ES":                  68,
		"ET":                  69,
		"FI":                  70,
		"FJ":                  71,
		"FK":                  72,
		"FM":                  73,
		"FO":                  74,
		"FR":                  75,
		"GA":                  76,
		"GB":                  77,
		"GD":                  78,
		"GE":                  79,
		"GF":                  80,
		"GG":                  81,
		"GH":                  82,
		"GI":                  83,
		"GL":                  84,
		"GM":                  85,
		"GN":                  86,
		"GP":                  87,
		"GQ":                  88,
		"GR":                  89,
		"GS":                  90,
		"GT":                  91,
		"GU":                  92,
		"GW":                  93,
		"GY":                  94,
		"HK":                  95,
		"HM":                  96,
		"HN":                  97,
		"HR":                  98,
		"HT":                  99,
		"HU":                  100,
		"ID":                  101,
		"IE":                  102,
		"IL":                  103,
		"IM":                  104,
		"IN":                  105,
		"IO":                  106,
		"IQ":                  107,
		"IR":                  108,
		"IS":                  109,
		"IT":                  110,
		"JE":                  111,
		"JM":                  112,
		"JO":                  113,
		"JP":                  114,
		"KE":                  115,
		"KG":                  116,
		"KH":                  117,
		"KI":                  118,
		"KM":                  119,
		"KN":                  120,
		"KP":                  121,
		"KR":                  122,
		"KW":                  123,
		"KY":                  124,
		"KZ":                  125,
		"LA":                  126,
		"LB":                  127,
		"LC":                  128,
		"LI":                  129,
		"LK":                  130,
		"LR":                  131,
		"LS":                  132,
		"LT":                  133,
		"LU":                  134,
		"LV":                  135,
		"LY":                  136,
		"MA":                  137,
		"MC":                  138,
		"MD":                  139,
		"ME":                  140,
		"MF":                  141,
		"MG":                  142,
		"MH":                  143,
		"MK":                  144,
		"ML":                  145,
		"MM":                  146,
		"MN":                  147,
		"MO":                  148,
		"MP":                  149,
		"MQ":                  150,
		"MR":                  151,
		"MS":                  152,
		"MT":                  153,
		"MU":                  154,
		"MV":                  155,
		"MW":                  156,
		"MX":                  157,
		"MY":                  158,
		"MZ":                  159,
		"NA":                  160,
		"NC":                  161,
		"NE":                  162,
		"NF":                  163,
		"NG":                  164,
		"NI":                  165,
		"NL":                  166,
		"NO":                  167,
		"NP":                  168,
		"NR":                  169,
		"NU":                  170,
		"NZ":                  171,
		"OM":                  172,
		"PA":                  173,
		"PE":                  174,
		"PF":                  175,
		"PG":                  176,
		"PH":                  177,
		"PK":                  178,
		"PL":                  179,
		"PM":                  180,
		"PN":                  181,
		"PR":                  182,
		"PS":                  183,
		"PT":                  184,
		"PW":                  185,
		"PY":                  186,
		"QA":                  187,
		"RE":                  188,
		"RO":                  189,
		"RS":                  190,
		"RU":                  191,
		"RW":                  192,
		"SA":                  193,
		"SB":                  194,
		"SC":                  195,
		"SD":                  196,
		"SE":                  197,
		"SG":                  198,
		"SH":                  199,
		"SI":                  200,
		"SJ":                  201,
		"SK":                  202,
		"SL":                  203,
		"SM":                  204,
		"SN":                  205,
		"SO":                  206,
		"SR":                  207,
		"SS":                  208,
		"ST":                  209,
		"SV":                  210,
		"SX":                  211,
		"SY":                  212,
		"SZ":                  213,
		"TC":                  214,
		"TD":                  215,
		"TF":                  216,
		"TG":                  217,
		"TH":                  218,
		"TJ":                  219,
		"TK":                  220,
		"TL":                  221,
		"TM":                  222,
		"TN":                  223,
		"TO":                  224,
		"TR":                  225,
		"TT":                  226,
		"TV":                  227,
		"TW":                  228,
		"TZ":                  229,
		"UA":                  230,
		"UG":                  231,
		"UM":                  232,
		"US":                  233,
		"UY":                  234,
		"UZ":                  235,
		"VA":                  236,
		"VC":                  237,
		"VE":                  238,
		"VG":                  239,
		"VI":                  240,
		"VN":                  241,
		"VU":                  242,
		"WF":                  243,
		"WS":                  244,
		"YE":                  245,
		"YT":                  246,
		"ZA":                  247,
		"ZM":                  248,
		"ZW":                  249,
	}
)

func (x ISO2CountryCode) Enum() *ISO2CountryCode {
	p := new(ISO2CountryCode)
	*p = x
	return p
}

func (x ISO2CountryCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ISO2CountryCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_nomenclatures_proto_enumTypes[1].Descriptor()
}

func (ISO2CountryCode) Type() protoreflect.EnumType {
	return &file_common_nomenclatures_proto_enumTypes[1]
}

func (x ISO2CountryCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ISO2CountryCode.Descriptor instead.
func (ISO2CountryCode) EnumDescriptor() ([]byte, []int) {
	return file_common_nomenclatures_proto_rawDescGZIP(), []int{1}
}

type CurrencyCode int32

const (
	CurrencyCode_UNDEFINED_CURRENCY CurrencyCode = 0
	CurrencyCode_AED                CurrencyCode = 1
	CurrencyCode_AFN                CurrencyCode = 2
	CurrencyCode_ALL                CurrencyCode = 3
	CurrencyCode_AMD                CurrencyCode = 4
	CurrencyCode_ANG                CurrencyCode = 5
	CurrencyCode_AOA                CurrencyCode = 6
	CurrencyCode_ARS                CurrencyCode = 7
	CurrencyCode_AUD                CurrencyCode = 8
	CurrencyCode_AWG                CurrencyCode = 9
	CurrencyCode_AZN                CurrencyCode = 10
	CurrencyCode_BAM                CurrencyCode = 11
	CurrencyCode_BBD                CurrencyCode = 12
	CurrencyCode_BDT                CurrencyCode = 13
	CurrencyCode_BGN                CurrencyCode = 14
	CurrencyCode_BHD                CurrencyCode = 15
	CurrencyCode_BIF                CurrencyCode = 16
	CurrencyCode_BMD                CurrencyCode = 17
	CurrencyCode_BND                CurrencyCode = 18
	CurrencyCode_BOB                CurrencyCode = 19
	CurrencyCode_BOV                CurrencyCode = 20
	CurrencyCode_BRL                CurrencyCode = 21
	CurrencyCode_BSD                CurrencyCode = 22
	CurrencyCode_BTN                CurrencyCode = 23
	CurrencyCode_BWP                CurrencyCode = 24
	CurrencyCode_BYN                CurrencyCode = 25
	CurrencyCode_BZD                CurrencyCode = 26
	CurrencyCode_CAD                CurrencyCode = 27
	CurrencyCode_CDF                CurrencyCode = 28
	CurrencyCode_CHE                CurrencyCode = 29
	CurrencyCode_CHF                CurrencyCode = 30
	CurrencyCode_CHW                CurrencyCode = 31
	CurrencyCode_CLF                CurrencyCode = 32
	CurrencyCode_CLP                CurrencyCode = 33
	CurrencyCode_CNY                CurrencyCode = 34
	CurrencyCode_COP                CurrencyCode = 35
	CurrencyCode_COU                CurrencyCode = 36
	CurrencyCode_CRC                CurrencyCode = 37
	CurrencyCode_CUC                CurrencyCode = 38
	CurrencyCode_CUP                CurrencyCode = 39
	CurrencyCode_CVE                CurrencyCode = 40
	CurrencyCode_CZK                CurrencyCode = 41
	CurrencyCode_DJF                CurrencyCode = 42
	CurrencyCode_DKK                CurrencyCode = 43
	CurrencyCode_DOP                CurrencyCode = 44
	CurrencyCode_DZD                CurrencyCode = 45
	CurrencyCode_EGP                CurrencyCode = 46
	CurrencyCode_ERN                CurrencyCode = 47
	CurrencyCode_ETB                CurrencyCode = 48
	CurrencyCode_EUR                CurrencyCode = 49
	CurrencyCode_FJD                CurrencyCode = 50
	CurrencyCode_FKP                CurrencyCode = 51
	CurrencyCode_GBP                CurrencyCode = 52
	CurrencyCode_GEL                CurrencyCode = 53
	CurrencyCode_GHS                CurrencyCode = 54
	CurrencyCode_GIP                CurrencyCode = 55
	CurrencyCode_GMD                CurrencyCode = 56
	CurrencyCode_GNF                CurrencyCode = 57
	CurrencyCode_GTQ                CurrencyCode = 58
	CurrencyCode_GYD                CurrencyCode = 59
	CurrencyCode_HKD                CurrencyCode = 60
	CurrencyCode_HNL                CurrencyCode = 61
	CurrencyCode_HRK                CurrencyCode = 62
	CurrencyCode_HTG                CurrencyCode = 63
	CurrencyCode_HUF                CurrencyCode = 64
	CurrencyCode_IDR                CurrencyCode = 65
	CurrencyCode_ILS                CurrencyCode = 66
	CurrencyCode_INR                CurrencyCode = 67
	CurrencyCode_IQD                CurrencyCode = 68
	CurrencyCode_IRR                CurrencyCode = 69
	CurrencyCode_ISK                CurrencyCode = 70
	CurrencyCode_JMD                CurrencyCode = 71
	CurrencyCode_JOD                CurrencyCode = 72
	CurrencyCode_JPY                CurrencyCode = 73
	CurrencyCode_KES                CurrencyCode = 74
	CurrencyCode_KGS                CurrencyCode = 75
	CurrencyCode_KHR                CurrencyCode = 76
	CurrencyCode_KMF                CurrencyCode = 77
	CurrencyCode_KPW                CurrencyCode = 78
	CurrencyCode_KRW                CurrencyCode = 79
	CurrencyCode_KWD                CurrencyCode = 80
	CurrencyCode_KYD                CurrencyCode = 81
	CurrencyCode_KZT                CurrencyCode = 82
	CurrencyCode_LAK                CurrencyCode = 83
	CurrencyCode_LBP                CurrencyCode = 84
	CurrencyCode_LKR                CurrencyCode = 85
	CurrencyCode_LRD                CurrencyCode = 86
	CurrencyCode_LSL                CurrencyCode = 87
	CurrencyCode_LYD                CurrencyCode = 88
	CurrencyCode_MAD                CurrencyCode = 89
	CurrencyCode_MDL                CurrencyCode = 90
	CurrencyCode_MGA                CurrencyCode = 91
	CurrencyCode_MKD                CurrencyCode = 92
	CurrencyCode_MMK                CurrencyCode = 93
	CurrencyCode_MNT                CurrencyCode = 94
	CurrencyCode_MOP                CurrencyCode = 95
	CurrencyCode_MRU                CurrencyCode = 96
	CurrencyCode_MUR                CurrencyCode = 97
	CurrencyCode_MVR                CurrencyCode = 98
	CurrencyCode_MWK                CurrencyCode = 99
	CurrencyCode_MXN                CurrencyCode = 100
	CurrencyCode_MXV                CurrencyCode = 101
	CurrencyCode_MYR                CurrencyCode = 102
	CurrencyCode_MZN                CurrencyCode = 103
	CurrencyCode_NAD                CurrencyCode = 104
	CurrencyCode_NGN                CurrencyCode = 105
	CurrencyCode_NIO                CurrencyCode = 106
	CurrencyCode_NOK                CurrencyCode = 107
	CurrencyCode_NPR                CurrencyCode = 108
	CurrencyCode_NZD                CurrencyCode = 109
	CurrencyCode_OMR                CurrencyCode = 110
	CurrencyCode_PAB                CurrencyCode = 111
	CurrencyCode_PEN                CurrencyCode = 112
	CurrencyCode_PGK                CurrencyCode = 113
	CurrencyCode_PHP                CurrencyCode = 114
	CurrencyCode_PKR                CurrencyCode = 115
	CurrencyCode_PLN                CurrencyCode = 116
	CurrencyCode_PYG                CurrencyCode = 117
	CurrencyCode_QAR                CurrencyCode = 118
	CurrencyCode_RON                CurrencyCode = 119
	CurrencyCode_RSD                CurrencyCode = 120
	CurrencyCode_RUB                CurrencyCode = 121
	CurrencyCode_RWF                CurrencyCode = 122
	CurrencyCode_SAR                CurrencyCode = 123
	CurrencyCode_SBD                CurrencyCode = 124
	CurrencyCode_SCR                CurrencyCode = 125
	CurrencyCode_SDG                CurrencyCode = 126
	CurrencyCode_SEK                CurrencyCode = 127
	CurrencyCode_SGD                CurrencyCode = 128
	CurrencyCode_SHP                CurrencyCode = 129
	CurrencyCode_SLL                CurrencyCode = 130
	CurrencyCode_SOS                CurrencyCode = 131
	CurrencyCode_SRD                CurrencyCode = 132
	CurrencyCode_SSP                CurrencyCode = 133
	CurrencyCode_STN                CurrencyCode = 134
	CurrencyCode_SVC                CurrencyCode = 135
	CurrencyCode_SYP                CurrencyCode = 136
	CurrencyCode_SZL                CurrencyCode = 137
	CurrencyCode_THB                CurrencyCode = 138
	CurrencyCode_TJS                CurrencyCode = 139
	CurrencyCode_TMT                CurrencyCode = 140
	CurrencyCode_TND                CurrencyCode = 141
	CurrencyCode_TOP                CurrencyCode = 142
	CurrencyCode_TRY                CurrencyCode = 143
	CurrencyCode_TTD                CurrencyCode = 144
	CurrencyCode_TWD                CurrencyCode = 145
	CurrencyCode_TZS                CurrencyCode = 146
	CurrencyCode_UAH                CurrencyCode = 147
	CurrencyCode_UGX                CurrencyCode = 148
	CurrencyCode_USD                CurrencyCode = 149
	CurrencyCode_USN                CurrencyCode = 150
	CurrencyCode_UYI                CurrencyCode = 151
	CurrencyCode_UYU                CurrencyCode = 152
	CurrencyCode_UYW                CurrencyCode = 153
	CurrencyCode_UZS                CurrencyCode = 154
	CurrencyCode_VES                CurrencyCode = 155
	CurrencyCode_VND                CurrencyCode = 156
	CurrencyCode_VUV                CurrencyCode = 157
	CurrencyCode_WST                CurrencyCode = 158
	CurrencyCode_XAF                CurrencyCode = 159
	CurrencyCode_XAG                CurrencyCode = 160
	CurrencyCode_XAU                CurrencyCode = 161
	CurrencyCode_XBA                CurrencyCode = 162
	CurrencyCode_XBB                CurrencyCode = 163
	CurrencyCode_XBC                CurrencyCode = 164
	CurrencyCode_XBD                CurrencyCode = 165
	CurrencyCode_XCD                CurrencyCode = 166
	CurrencyCode_XDR                CurrencyCode = 167
	CurrencyCode_XOF                CurrencyCode = 168
	CurrencyCode_XPD                CurrencyCode = 169
	CurrencyCode_XPF                CurrencyCode = 170
	CurrencyCode_XPT                CurrencyCode = 171
	CurrencyCode_XSU                CurrencyCode = 172
	CurrencyCode_XTS                CurrencyCode = 173
	CurrencyCode_XUA                CurrencyCode = 174
	CurrencyCode_XXX                CurrencyCode = 175
	CurrencyCode_YER                CurrencyCode = 176
	CurrencyCode_ZAR                CurrencyCode = 177
	CurrencyCode_ZMW                CurrencyCode = 178
	CurrencyCode_ZWL                CurrencyCode = 179
)

// Enum value maps for CurrencyCode.
var (
	CurrencyCode_name = map[int32]string{
		0:   "UNDEFINED_CURRENCY",
		1:   "AED",
		2:   "AFN",
		3:   "ALL",
		4:   "AMD",
		5:   "ANG",
		6:   "AOA",
		7:   "ARS",
		8:   "AUD",
		9:   "AWG",
		10:  "AZN",
		11:  "BAM",
		12:  "BBD",
		13:  "BDT",
		14:  "BGN",
		15:  "BHD",
		16:  "BIF",
		17:  "BMD",
		18:  "BND",
		19:  "BOB",
		20:  "BOV",
		21:  "BRL",
		22:  "BSD",
		23:  "BTN",
		24:  "BWP",
		25:  "BYN",
		26:  "BZD",
		27:  "CAD",
		28:  "CDF",
		29:  "CHE",
		30:  "CHF",
		31:  "CHW",
		32:  "CLF",
		33:  "CLP",
		34:  "CNY",
		35:  "COP",
		36:  "COU",
		37:  "CRC",
		38:  "CUC",
		39:  "CUP",
		40:  "CVE",
		41:  "CZK",
		42:  "DJF",
		43:  "DKK",
		44:  "DOP",
		45:  "DZD",
		46:  "EGP",
		47:  "ERN",
		48:  "ETB",
		49:  "EUR",
		50:  "FJD",
		51:  "FKP",
		52:  "GBP",
		53:  "GEL",
		54:  "GHS",
		55:  "GIP",
		56:  "GMD",
		57:  "GNF",
		58:  "GTQ",
		59:  "GYD",
		60:  "HKD",
		61:  "HNL",
		62:  "HRK",
		63:  "HTG",
		64:  "HUF",
		65:  "IDR",
		66:  "ILS",
		67:  "INR",
		68:  "IQD",
		69:  "IRR",
		70:  "ISK",
		71:  "JMD",
		72:  "JOD",
		73:  "JPY",
		74:  "KES",
		75:  "KGS",
		76:  "KHR",
		77:  "KMF",
		78:  "KPW",
		79:  "KRW",
		80:  "KWD",
		81:  "KYD",
		82:  "KZT",
		83:  "LAK",
		84:  "LBP",
		85:  "LKR",
		86:  "LRD",
		87:  "LSL",
		88:  "LYD",
		89:  "MAD",
		90:  "MDL",
		91:  "MGA",
		92:  "MKD",
		93:  "MMK",
		94:  "MNT",
		95:  "MOP",
		96:  "MRU",
		97:  "MUR",
		98:  "MVR",
		99:  "MWK",
		100: "MXN",
		101: "MXV",
		102: "MYR",
		103: "MZN",
		104: "NAD",
		105: "NGN",
		106: "NIO",
		107: "NOK",
		108: "NPR",
		109: "NZD",
		110: "OMR",
		111: "PAB",
		112: "PEN",
		113: "PGK",
		114: "PHP",
		115: "PKR",
		116: "PLN",
		117: "PYG",
		118: "QAR",
		119: "RON",
		120: "RSD",
		121: "RUB",
		122: "RWF",
		123: "SAR",
		124: "SBD",
		125: "SCR",
		126: "SDG",
		127: "SEK",
		128: "SGD",
		129: "SHP",
		130: "SLL",
		131: "SOS",
		132: "SRD",
		133: "SSP",
		134: "STN",
		135: "SVC",
		136: "SYP",
		137: "SZL",
		138: "THB",
		139: "TJS",
		140: "TMT",
		141: "TND",
		142: "TOP",
		143: "TRY",
		144: "TTD",
		145: "TWD",
		146: "TZS",
		147: "UAH",
		148: "UGX",
		149: "USD",
		150: "USN",
		151: "UYI",
		152: "UYU",
		153: "UYW",
		154: "UZS",
		155: "VES",
		156: "VND",
		157: "VUV",
		158: "WST",
		159: "XAF",
		160: "XAG",
		161: "XAU",
		162: "XBA",
		163: "XBB",
		164: "XBC",
		165: "XBD",
		166: "XCD",
		167: "XDR",
		168: "XOF",
		169: "XPD",
		170: "XPF",
		171: "XPT",
		172: "XSU",
		173: "XTS",
		174: "XUA",
		175: "XXX",
		176: "YER",
		177: "ZAR",
		178: "ZMW",
		179: "ZWL",
	}
	CurrencyCode_value = map[string]int32{
		"UNDEFINED_CURRENCY": 0,
		"AED":                1,
		"AFN":                2,
		"ALL":                3,
		"AMD":                4,
		"ANG":                5,
		"AOA":                6,
		"ARS":                7,
		"AUD":                8,
		"AWG":                9,
		"AZN":                10,
		"BAM":                11,
		"BBD":                12,
		"BDT":                13,
		"BGN":                14,
		"BHD":                15,
		"BIF":                16,
		"BMD":                17,
		"BND":                18,
		"BOB":                19,
		"BOV":                20,
		"BRL":                21,
		"BSD":                22,
		"BTN":                23,
		"BWP":                24,
		"BYN":                25,
		"BZD":                26,
		"CAD":                27,
		"CDF":                28,
		"CHE":                29,
		"CHF":                30,
		"CHW":                31,
		"CLF":                32,
		"CLP":                33,
		"CNY":                34,
		"COP":                35,
		"COU":                36,
		"CRC":                37,
		"CUC":                38,
		"CUP":                39,
		"CVE":                40,
		"CZK":                41,
		"DJF":                42,
		"DKK":                43,
		"DOP":                44,
		"DZD":                45,
		"EGP":                46,
		"ERN":                47,
		"ETB":                48,
		"EUR":                49,
		"FJD":                50,
		"FKP":                51,
		"GBP":                52,
		"GEL":                53,
		"GHS":                54,
		"GIP":                55,
		"GMD":                56,
		"GNF":                57,
		"GTQ":                58,
		"GYD":                59,
		"HKD":                60,
		"HNL":                61,
		"HRK":                62,
		"HTG":                63,
		"HUF":                64,
		"IDR":                65,
		"ILS":                66,
		"INR":                67,
		"IQD":                68,
		"IRR":                69,
		"ISK":                70,
		"JMD":                71,
		"JOD":                72,
		"JPY":                73,
		"KES":                74,
		"KGS":                75,
		"KHR":                76,
		"KMF":                77,
		"KPW":                78,
		"KRW":                79,
		"KWD":                80,
		"KYD":                81,
		"KZT":                82,
		"LAK":                83,
		"LBP":                84,
		"LKR":                85,
		"LRD":                86,
		"LSL":                87,
		"LYD":                88,
		"MAD":                89,
		"MDL":                90,
		"MGA":                91,
		"MKD":                92,
		"MMK":                93,
		"MNT":                94,
		"MOP":                95,
		"MRU":                96,
		"MUR":                97,
		"MVR":                98,
		"MWK":                99,
		"MXN":                100,
		"MXV":                101,
		"MYR":                102,
		"MZN":                103,
		"NAD":                104,
		"NGN":                105,
		"NIO":                106,
		"NOK":                107,
		"NPR":                108,
		"NZD":                109,
		"OMR":                110,
		"PAB":                111,
		"PEN":                112,
		"PGK":                113,
		"PHP":                114,
		"PKR":                115,
		"PLN":                116,
		"PYG":                117,
		"QAR":                118,
		"RON":                119,
		"RSD":                120,
		"RUB":                121,
		"RWF":                122,
		"SAR":                123,
		"SBD":                124,
		"SCR":                125,
		"SDG":                126,
		"SEK":                127,
		"SGD":                128,
		"SHP":                129,
		"SLL":                130,
		"SOS":                131,
		"SRD":                132,
		"SSP":                133,
		"STN":                134,
		"SVC":                135,
		"SYP":                136,
		"SZL":                137,
		"THB":                138,
		"TJS":                139,
		"TMT":                140,
		"TND":                141,
		"TOP":                142,
		"TRY":                143,
		"TTD":                144,
		"TWD":                145,
		"TZS":                146,
		"UAH":                147,
		"UGX":                148,
		"USD":                149,
		"USN":                150,
		"UYI":                151,
		"UYU":                152,
		"UYW":                153,
		"UZS":                154,
		"VES":                155,
		"VND":                156,
		"VUV":                157,
		"WST":                158,
		"XAF":                159,
		"XAG":                160,
		"XAU":                161,
		"XBA":                162,
		"XBB":                163,
		"XBC":                164,
		"XBD":                165,
		"XCD":                166,
		"XDR":                167,
		"XOF":                168,
		"XPD":                169,
		"XPF":                170,
		"XPT":                171,
		"XSU":                172,
		"XTS":                173,
		"XUA":                174,
		"XXX":                175,
		"YER":                176,
		"ZAR":                177,
		"ZMW":                178,
		"ZWL":                179,
	}
)

func (x CurrencyCode) Enum() *CurrencyCode {
	p := new(CurrencyCode)
	*p = x
	return p
}

func (x CurrencyCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CurrencyCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_nomenclatures_proto_enumTypes[2].Descriptor()
}

func (CurrencyCode) Type() protoreflect.EnumType {
	return &file_common_nomenclatures_proto_enumTypes[2]
}

func (x CurrencyCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CurrencyCode.Descriptor instead.
func (CurrencyCode) EnumDescriptor() ([]byte, []int) {
	return file_common_nomenclatures_proto_rawDescGZIP(), []int{2}
}

type BeneficiaryType int32

const (
	BeneficiaryType_Individual   BeneficiaryType = 0
	BeneficiaryType_Organisation BeneficiaryType = 1
)

// Enum value maps for BeneficiaryType.
var (
	BeneficiaryType_name = map[int32]string{
		0: "Individual",
		1: "Organisation",
	}
	BeneficiaryType_value = map[string]int32{
		"Individual":   0,
		"Organisation": 1,
	}
)

func (x BeneficiaryType) Enum() *BeneficiaryType {
	p := new(BeneficiaryType)
	*p = x
	return p
}

func (x BeneficiaryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BeneficiaryType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_nomenclatures_proto_enumTypes[3].Descriptor()
}

func (BeneficiaryType) Type() protoreflect.EnumType {
	return &file_common_nomenclatures_proto_enumTypes[3]
}

func (x BeneficiaryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BeneficiaryType.Descriptor instead.
func (BeneficiaryType) EnumDescriptor() ([]byte, []int) {
	return file_common_nomenclatures_proto_rawDescGZIP(), []int{3}
}

var File_common_nomenclatures_proto protoreflect.FileDescriptor

var file_common_nomenclatures_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x70, 0x6f,
	0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2a, 0xc3, 0x01,
	0x0a, 0x0d, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x05,
	0x12, 0x1b, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x06, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x0a, 0x2a, 0xec, 0x10, 0x0a, 0x0f, 0x49, 0x53, 0x4f, 0x32, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x44, 0x45, 0x46,
	0x49, 0x4e, 0x45, 0x44, 0x5f, 0x49, 0x53, 0x4f, 0x32, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x41, 0x44, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x45, 0x10, 0x02,
	0x12, 0x06, 0x0a, 0x02, 0x41, 0x46, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x47, 0x10, 0x04,
	0x12, 0x06, 0x0a, 0x02, 0x41, 0x49, 0x10, 0x05, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x4c, 0x10, 0x06,
	0x12, 0x06, 0x0a, 0x02, 0x41, 0x4d, 0x10, 0x07, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x4f, 0x10, 0x08,
	0x12, 0x06, 0x0a, 0x02, 0x41, 0x51, 0x10, 0x09, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x52, 0x10, 0x0a,
	0x12, 0x06, 0x0a, 0x02, 0x41, 0x53, 0x10, 0x0b, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x54, 0x10, 0x0c,
	0x12, 0x06, 0x0a, 0x02, 0x41, 0x55, 0x10, 0x0d, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x57, 0x10, 0x0e,
	0x12, 0x06, 0x0a, 0x02, 0x41, 0x58, 0x10, 0x0f, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x5a, 0x10, 0x10,
	0x12, 0x06, 0x0a, 0x02, 0x42, 0x41, 0x10, 0x11, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x42, 0x10, 0x12,
	0x12, 0x06, 0x0a, 0x02, 0x42, 0x44, 0x10, 0x13, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x45, 0x10, 0x14,
	0x12, 0x06, 0x0a, 0x02, 0x42, 0x46, 0x10, 0x15, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x47, 0x10, 0x16,
	0x12, 0x06, 0x0a, 0x02, 0x42, 0x48, 0x10, 0x17, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x49, 0x10, 0x18,
	0x12, 0x06, 0x0a, 0x02, 0x42, 0x4a, 0x10, 0x19, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x4c, 0x10, 0x1a,
	0x12, 0x06, 0x0a, 0x02, 0x42, 0x4d, 0x10, 0x1b, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x4e, 0x10, 0x1c,
	0x12, 0x06, 0x0a, 0x02, 0x42, 0x4f, 0x10, 0x1d, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x51, 0x10, 0x1e,
	0x12, 0x06, 0x0a, 0x02, 0x42, 0x52, 0x10, 0x1f, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x53, 0x10, 0x20,
	0x12, 0x06, 0x0a, 0x02, 0x42, 0x54, 0x10, 0x21, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x56, 0x10, 0x22,
	0x12, 0x06, 0x0a, 0x02, 0x42, 0x57, 0x10, 0x23, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x59, 0x10, 0x24,
	0x12, 0x06, 0x0a, 0x02, 0x42, 0x5a, 0x10, 0x25, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x41, 0x10, 0x26,
	0x12, 0x06, 0x0a, 0x02, 0x43, 0x43, 0x10, 0x27, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x44, 0x10, 0x28,
	0x12, 0x06, 0x0a, 0x02, 0x43, 0x46, 0x10, 0x29, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x47, 0x10, 0x2a,
	0x12, 0x06, 0x0a, 0x02, 0x43, 0x48, 0x10, 0x2b, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x49, 0x10, 0x2c,
	0x12, 0x06, 0x0a, 0x02, 0x43, 0x4b, 0x10, 0x2d, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x4c, 0x10, 0x2e,
	0x12, 0x06, 0x0a, 0x02, 0x43, 0x4d, 0x10, 0x2f, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x4e, 0x10, 0x30,
	0x12, 0x06, 0x0a, 0x02, 0x43, 0x4f, 0x10, 0x31, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x52, 0x10, 0x32,
	0x12, 0x06, 0x0a, 0x02, 0x43, 0x55, 0x10, 0x33, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x56, 0x10, 0x34,
	0x12, 0x06, 0x0a, 0x02, 0x43, 0x57, 0x10, 0x35, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x58, 0x10, 0x36,
	0x12, 0x06, 0x0a, 0x02, 0x43, 0x59, 0x10, 0x37, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x5a, 0x10, 0x38,
	0x12, 0x06, 0x0a, 0x02, 0x44, 0x45, 0x10, 0x39, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x4a, 0x10, 0x3a,
	0x12, 0x06, 0x0a, 0x02, 0x44, 0x4b, 0x10, 0x3b, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x4d, 0x10, 0x3c,
	0x12, 0x06, 0x0a, 0x02, 0x44, 0x4f, 0x10, 0x3d, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x5a, 0x10, 0x3e,
	0x12, 0x06, 0x0a, 0x02, 0x45, 0x43, 0x10, 0x3f, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x45, 0x10, 0x40,
	0x12, 0x06, 0x0a, 0x02, 0x45, 0x47, 0x10, 0x41, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x48, 0x10, 0x42,
	0x12, 0x06, 0x0a, 0x02, 0x45, 0x52, 0x10, 0x43, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x53, 0x10, 0x44,
	0x12, 0x06, 0x0a, 0x02, 0x45, 0x54, 0x10, 0x45, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x49, 0x10, 0x46,
	0x12, 0x06, 0x0a, 0x02, 0x46, 0x4a, 0x10, 0x47, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x4b, 0x10, 0x48,
	0x12, 0x06, 0x0a, 0x02, 0x46, 0x4d, 0x10, 0x49, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x4f, 0x10, 0x4a,
	0x12, 0x06, 0x0a, 0x02, 0x46, 0x52, 0x10, 0x4b, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x41, 0x10, 0x4c,
	0x12, 0x06, 0x0a, 0x02, 0x47, 0x42, 0x10, 0x4d, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x44, 0x10, 0x4e,
	0x12, 0x06, 0x0a, 0x02, 0x47, 0x45, 0x10, 0x4f, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x46, 0x10, 0x50,
	0x12, 0x06, 0x0a, 0x02, 0x47, 0x47, 0x10, 0x51, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x48, 0x10, 0x52,
	0x12, 0x06, 0x0a, 0x02, 0x47, 0x49, 0x10, 0x53, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x4c, 0x10, 0x54,
	0x12, 0x06, 0x0a, 0x02, 0x47, 0x4d, 0x10, 0x55, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x4e, 0x10, 0x56,
	0x12, 0x06, 0x0a, 0x02, 0x47, 0x50, 0x10, 0x57, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x51, 0x10, 0x58,
	0x12, 0x06, 0x0a, 0x02, 0x47, 0x52, 0x10, 0x59, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x53, 0x10, 0x5a,
	0x12, 0x06, 0x0a, 0x02, 0x47, 0x54, 0x10, 0x5b, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x55, 0x10, 0x5c,
	0x12, 0x06, 0x0a, 0x02, 0x47, 0x57, 0x10, 0x5d, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x59, 0x10, 0x5e,
	0x12, 0x06, 0x0a, 0x02, 0x48, 0x4b, 0x10, 0x5f, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x4d, 0x10, 0x60,
	0x12, 0x06, 0x0a, 0x02, 0x48, 0x4e, 0x10, 0x61, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x52, 0x10, 0x62,
	0x12, 0x06, 0x0a, 0x02, 0x48, 0x54, 0x10, 0x63, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x55, 0x10, 0x64,
	0x12, 0x06, 0x0a, 0x02, 0x49, 0x44, 0x10, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x45, 0x10, 0x66,
	0x12, 0x06, 0x0a, 0x02, 0x49, 0x4c, 0x10, 0x67, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4d, 0x10, 0x68,
	0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10, 0x69, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4f, 0x10, 0x6a,
	0x12, 0x06, 0x0a, 0x02, 0x49, 0x51, 0x10, 0x6b, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x52, 0x10, 0x6c,
	0x12, 0x06, 0x0a, 0x02, 0x49, 0x53, 0x10, 0x6d, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x54, 0x10, 0x6e,
	0x12, 0x06, 0x0a, 0x02, 0x4a, 0x45, 0x10, 0x6f, 0x12, 0x06, 0x0a, 0x02, 0x4a, 0x4d, 0x10, 0x70,
	0x12, 0x06, 0x0a, 0x02, 0x4a, 0x4f, 0x10, 0x71, 0x12, 0x06, 0x0a, 0x02, 0x4a, 0x50, 0x10, 0x72,
	0x12, 0x06, 0x0a, 0x02, 0x4b, 0x45, 0x10, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x47, 0x10, 0x74,
	0x12, 0x06, 0x0a, 0x02, 0x4b, 0x48, 0x10, 0x75, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x49, 0x10, 0x76,
	0x12, 0x06, 0x0a, 0x02, 0x4b, 0x4d, 0x10, 0x77, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x4e, 0x10, 0x78,
	0x12, 0x06, 0x0a, 0x02, 0x4b, 0x50, 0x10, 0x79, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x52, 0x10, 0x7a,
	0x12, 0x06, 0x0a, 0x02, 0x4b, 0x57, 0x10, 0x7b, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x59, 0x10, 0x7c,
	0x12, 0x06, 0x0a, 0x02, 0x4b, 0x5a, 0x10, 0x7d, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x41, 0x10, 0x7e,
	0x12, 0x06, 0x0a, 0x02, 0x4c, 0x42, 0x10, 0x7f, 0x12, 0x07, 0x0a, 0x02, 0x4c, 0x43, 0x10, 0x80,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x4c, 0x49, 0x10, 0x81, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4c, 0x4b,
	0x10, 0x82, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4c, 0x52, 0x10, 0x83, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x4c, 0x53, 0x10, 0x84, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4c, 0x54, 0x10, 0x85, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x4c, 0x55, 0x10, 0x86, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4c, 0x56, 0x10, 0x87, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x4c, 0x59, 0x10, 0x88, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x41, 0x10,
	0x89, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x43, 0x10, 0x8a, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d,
	0x44, 0x10, 0x8b, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x45, 0x10, 0x8c, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x4d, 0x46, 0x10, 0x8d, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x47, 0x10, 0x8e, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x4d, 0x48, 0x10, 0x8f, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x4b, 0x10, 0x90,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x4c, 0x10, 0x91, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x4d,
	0x10, 0x92, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x4e, 0x10, 0x93, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x4d, 0x4f, 0x10, 0x94, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x50, 0x10, 0x95, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x4d, 0x51, 0x10, 0x96, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x52, 0x10, 0x97, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x4d, 0x53, 0x10, 0x98, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x54, 0x10,
	0x99, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x55, 0x10, 0x9a, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d,
	0x56, 0x10, 0x9b, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x57, 0x10, 0x9c, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x4d, 0x58, 0x10, 0x9d, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x59, 0x10, 0x9e, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x4d, 0x5a, 0x10, 0x9f, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x41, 0x10, 0xa0,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x43, 0x10, 0xa1, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x45,
	0x10, 0xa2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x46, 0x10, 0xa3, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x4e, 0x47, 0x10, 0xa4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x49, 0x10, 0xa5, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x4e, 0x4c, 0x10, 0xa6, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x4f, 0x10, 0xa7, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x4e, 0x50, 0x10, 0xa8, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x52, 0x10,
	0xa9, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x55, 0x10, 0xaa, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e,
	0x5a, 0x10, 0xab, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4f, 0x4d, 0x10, 0xac, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x50, 0x41, 0x10, 0xad, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x45, 0x10, 0xae, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x50, 0x46, 0x10, 0xaf, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x47, 0x10, 0xb0,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x48, 0x10, 0xb1, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x4b,
	0x10, 0xb2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x4c, 0x10, 0xb3, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x50, 0x4d, 0x10, 0xb4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x4e, 0x10, 0xb5, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x50, 0x52, 0x10, 0xb6, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x53, 0x10, 0xb7, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x50, 0x54, 0x10, 0xb8, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x57, 0x10,
	0xb9, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x59, 0x10, 0xba, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x51,
	0x41, 0x10, 0xbb, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x52, 0x45, 0x10, 0xbc, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x52, 0x4f, 0x10, 0xbd, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x52, 0x53, 0x10, 0xbe, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x52, 0x55, 0x10, 0xbf, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x52, 0x57, 0x10, 0xc0,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x41, 0x10, 0xc1, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x42,
	0x10, 0xc2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x43, 0x10, 0xc3, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x53, 0x44, 0x10, 0xc4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x45, 0x10, 0xc5, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x53, 0x47, 0x10, 0xc6, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x48, 0x10, 0xc7, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x53, 0x49, 0x10, 0xc8, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x4a, 0x10,
	0xc9, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x4b, 0x10, 0xca, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53,
	0x4c, 0x10, 0xcb, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x4d, 0x10, 0xcc, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x53, 0x4e, 0x10, 0xcd, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x4f, 0x10, 0xce, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x53, 0x52, 0x10, 0xcf, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x53, 0x10, 0xd0,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x54, 0x10, 0xd1, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x56,
	0x10, 0xd2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x58, 0x10, 0xd3, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x53, 0x59, 0x10, 0xd4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x5a, 0x10, 0xd5, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x54, 0x43, 0x10, 0xd6, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x44, 0x10, 0xd7, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x54, 0x46, 0x10, 0xd8, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x47, 0x10,
	0xd9, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x48, 0x10, 0xda, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54,
	0x4a, 0x10, 0xdb, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x4b, 0x10, 0xdc, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x54, 0x4c, 0x10, 0xdd, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x4d, 0x10, 0xde, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x54, 0x4e, 0x10, 0xdf, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x4f, 0x10, 0xe0,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x52, 0x10, 0xe1, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x54,
	0x10, 0xe2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x56, 0x10, 0xe3, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x54, 0x57, 0x10, 0xe4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x5a, 0x10, 0xe5, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x55, 0x41, 0x10, 0xe6, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x55, 0x47, 0x10, 0xe7, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x55, 0x4d, 0x10, 0xe8, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x55, 0x53, 0x10,
	0xe9, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x55, 0x59, 0x10, 0xea, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x55,
	0x5a, 0x10, 0xeb, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x56, 0x41, 0x10, 0xec, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x56, 0x43, 0x10, 0xed, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x56, 0x45, 0x10, 0xee, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x56, 0x47, 0x10, 0xef, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x56, 0x49, 0x10, 0xf0,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x56, 0x4e, 0x10, 0xf1, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x56, 0x55,
	0x10, 0xf2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x57, 0x46, 0x10, 0xf3, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x57, 0x53, 0x10, 0xf4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x59, 0x45, 0x10, 0xf5, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x59, 0x54, 0x10, 0xf6, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x5a, 0x41, 0x10, 0xf7, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x5a, 0x4d, 0x10, 0xf8, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x5a, 0x57, 0x10,
	0xf9, 0x01, 0x2a, 0xa5, 0x0d, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44,
	0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x46, 0x4e, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4d, 0x44, 0x10, 0x04, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4f, 0x41, 0x10,
	0x06, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x52, 0x53, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x55,
	0x44, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x57, 0x47, 0x10, 0x09, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x5a, 0x4e, 0x10, 0x0a, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x41, 0x4d, 0x10, 0x0b, 0x12, 0x07,
	0x0a, 0x03, 0x42, 0x42, 0x44, 0x10, 0x0c, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x44, 0x54, 0x10, 0x0d,
	0x12, 0x07, 0x0a, 0x03, 0x42, 0x47, 0x4e, 0x10, 0x0e, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x48, 0x44,
	0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x49, 0x46, 0x10, 0x10, 0x12, 0x07, 0x0a, 0x03, 0x42,
	0x4d, 0x44, 0x10, 0x11, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4e, 0x44, 0x10, 0x12, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x4f, 0x42, 0x10, 0x13, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4f, 0x56, 0x10, 0x14, 0x12,
	0x07, 0x0a, 0x03, 0x42, 0x52, 0x4c, 0x10, 0x15, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x53, 0x44, 0x10,
	0x16, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x54, 0x4e, 0x10, 0x17, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x57,
	0x50, 0x10, 0x18, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x59, 0x4e, 0x10, 0x19, 0x12, 0x07, 0x0a, 0x03,
	0x42, 0x5a, 0x44, 0x10, 0x1a, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x44, 0x10, 0x1b, 0x12, 0x07,
	0x0a, 0x03, 0x43, 0x44, 0x46, 0x10, 0x1c, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x48, 0x45, 0x10, 0x1d,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x48, 0x46, 0x10, 0x1e, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x48, 0x57,
	0x10, 0x1f, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4c, 0x46, 0x10, 0x20, 0x12, 0x07, 0x0a, 0x03, 0x43,
	0x4c, 0x50, 0x10, 0x21, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4e, 0x59, 0x10, 0x22, 0x12, 0x07, 0x0a,
	0x03, 0x43, 0x4f, 0x50, 0x10, 0x23, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4f, 0x55, 0x10, 0x24, 0x12,
	0x07, 0x0a, 0x03, 0x43, 0x52, 0x43, 0x10, 0x25, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x55, 0x43, 0x10,
	0x26, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x55, 0x50, 0x10, 0x27, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x56,
	0x45, 0x10, 0x28, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x5a, 0x4b, 0x10, 0x29, 0x12, 0x07, 0x0a, 0x03,
	0x44, 0x4a, 0x46, 0x10, 0x2a, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x4b, 0x4b, 0x10, 0x2b, 0x12, 0x07,
	0x0a, 0x03, 0x44, 0x4f, 0x50, 0x10, 0x2c, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x5a, 0x44, 0x10, 0x2d,
	0x12, 0x07, 0x0a, 0x03, 0x45, 0x47, 0x50, 0x10, 0x2e, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x52, 0x4e,
	0x10, 0x2f, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x54, 0x42, 0x10, 0x30, 0x12, 0x07, 0x0a, 0x03, 0x45,
	0x55, 0x52, 0x10, 0x31, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4a, 0x44, 0x10, 0x32, 0x12, 0x07, 0x0a,
	0x03, 0x46, 0x4b, 0x50, 0x10, 0x33, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x42, 0x50, 0x10, 0x34, 0x12,
	0x07, 0x0a, 0x03, 0x47, 0x45, 0x4c, 0x10, 0x35, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x48, 0x53, 0x10,
	0x36, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x49, 0x50, 0x10, 0x37, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x4d,
	0x44, 0x10, 0x38, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x4e, 0x46, 0x10, 0x39, 0x12, 0x07, 0x0a, 0x03,
	0x47, 0x54, 0x51, 0x10, 0x3a, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x59, 0x44, 0x10, 0x3b, 0x12, 0x07,
	0x0a, 0x03, 0x48, 0x4b, 0x44, 0x10, 0x3c, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x4e, 0x4c, 0x10, 0x3d,
	0x12, 0x07, 0x0a, 0x03, 0x48, 0x52, 0x4b, 0x10, 0x3e, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x54, 0x47,
	0x10, 0x3f, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x55, 0x46, 0x10, 0x40, 0x12, 0x07, 0x0a, 0x03, 0x49,
	0x44, 0x52, 0x10, 0x41, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4c, 0x53, 0x10, 0x42, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x4e, 0x52, 0x10, 0x43, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x51, 0x44, 0x10, 0x44, 0x12,
	0x07, 0x0a, 0x03, 0x49, 0x52, 0x52, 0x10, 0x45, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x53, 0x4b, 0x10,
	0x46, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4d, 0x44, 0x10, 0x47, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4f,
	0x44, 0x10, 0x48, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x50, 0x59, 0x10, 0x49, 0x12, 0x07, 0x0a, 0x03,
	0x4b, 0x45, 0x53, 0x10, 0x4a, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x47, 0x53, 0x10, 0x4b, 0x12, 0x07,
	0x0a, 0x03, 0x4b, 0x48, 0x52, 0x10, 0x4c, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x4d, 0x46, 0x10, 0x4d,
	0x12, 0x07, 0x0a, 0x03, 0x4b, 0x50, 0x57, 0x10, 0x4e, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x52, 0x57,
	0x10, 0x4f, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x57, 0x44, 0x10, 0x50, 0x12, 0x07, 0x0a, 0x03, 0x4b,
	0x59, 0x44, 0x10, 0x51, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x5a, 0x54, 0x10, 0x52, 0x12, 0x07, 0x0a,
	0x03, 0x4c, 0x41, 0x4b, 0x10, 0x53, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x42, 0x50, 0x10, 0x54, 0x12,
	0x07, 0x0a, 0x03, 0x4c, 0x4b, 0x52, 0x10, 0x55, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x52, 0x44, 0x10,
	0x56, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x53, 0x4c, 0x10, 0x57, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x59,
	0x44, 0x10, 0x58, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x44, 0x10, 0x59, 0x12, 0x07, 0x0a, 0x03,
	0x4d, 0x44, 0x4c, 0x10, 0x5a, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x47, 0x41, 0x10, 0x5b, 0x12, 0x07,
	0x0a, 0x03, 0x4d, 0x4b, 0x44, 0x10, 0x5c, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4d, 0x4b, 0x10, 0x5d,
	0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4e, 0x54, 0x10, 0x5e, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4f, 0x50,
	0x10, 0x5f, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x52, 0x55, 0x10, 0x60, 0x12, 0x07, 0x0a, 0x03, 0x4d,
	0x55, 0x52, 0x10, 0x61, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x56, 0x52, 0x10, 0x62, 0x12, 0x07, 0x0a,
	0x03, 0x4d, 0x57, 0x4b, 0x10, 0x63, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x58, 0x4e, 0x10, 0x64, 0x12,
	0x07, 0x0a, 0x03, 0x4d, 0x58, 0x56, 0x10, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x59, 0x52, 0x10,
	0x66, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x5a, 0x4e, 0x10, 0x67, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x41,
	0x44, 0x10, 0x68, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x47, 0x4e, 0x10, 0x69, 0x12, 0x07, 0x0a, 0x03,
	0x4e, 0x49, 0x4f, 0x10, 0x6a, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f, 0x4b, 0x10, 0x6b, 0x12, 0x07,
	0x0a, 0x03, 0x4e, 0x50, 0x52, 0x10, 0x6c, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x5a, 0x44, 0x10, 0x6d,
	0x12, 0x07, 0x0a, 0x03, 0x4f, 0x4d, 0x52, 0x10, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x41, 0x42,
	0x10, 0x6f, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x45, 0x4e, 0x10, 0x70, 0x12, 0x07, 0x0a, 0x03, 0x50,
	0x47, 0x4b, 0x10, 0x71, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x48, 0x50, 0x10, 0x72, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x4b, 0x52, 0x10, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4c, 0x4e, 0x10, 0x74, 0x12,
	0x07, 0x0a, 0x03, 0x50, 0x59, 0x47, 0x10, 0x75, 0x12, 0x07, 0x0a, 0x03, 0x51, 0x41, 0x52, 0x10,
	0x76, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x4f, 0x4e, 0x10, 0x77, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x53,
	0x44, 0x10, 0x78, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x55, 0x42, 0x10, 0x79, 0x12, 0x07, 0x0a, 0x03,
	0x52, 0x57, 0x46, 0x10, 0x7a, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x41, 0x52, 0x10, 0x7b, 0x12, 0x07,
	0x0a, 0x03, 0x53, 0x42, 0x44, 0x10, 0x7c, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x43, 0x52, 0x10, 0x7d,
	0x12, 0x07, 0x0a, 0x03, 0x53, 0x44, 0x47, 0x10, 0x7e, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x4b,
	0x10, 0x7f, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x47, 0x44, 0x10, 0x80, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x53, 0x48, 0x50, 0x10, 0x81, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x4c, 0x4c, 0x10, 0x82, 0x01,
	0x12, 0x08, 0x0a, 0x03, 0x53, 0x4f, 0x53, 0x10, 0x83, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x52,
	0x44, 0x10, 0x84, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x53, 0x50, 0x10, 0x85, 0x01, 0x12, 0x08,
	0x0a, 0x03, 0x53, 0x54, 0x4e, 0x10, 0x86, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x56, 0x43, 0x10,
	0x87, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x59, 0x50, 0x10, 0x88, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x53, 0x5a, 0x4c, 0x10, 0x89, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x48, 0x42, 0x10, 0x8a, 0x01,
	0x12, 0x08, 0x0a, 0x03, 0x54, 0x4a, 0x53, 0x10, 0x8b, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x4d,
	0x54, 0x10, 0x8c, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x4e, 0x44, 0x10, 0x8d, 0x01, 0x12, 0x08,
	0x0a, 0x03, 0x54, 0x4f, 0x50, 0x10, 0x8e, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x52, 0x59, 0x10,
	0x8f, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x54, 0x44, 0x10, 0x90, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x54, 0x57, 0x44, 0x10, 0x91, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x5a, 0x53, 0x10, 0x92, 0x01,
	0x12, 0x08, 0x0a, 0x03, 0x55, 0x41, 0x48, 0x10, 0x93, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x47,
	0x58, 0x10, 0x94, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x53, 0x44, 0x10, 0x95, 0x01, 0x12, 0x08,
	0x0a, 0x03, 0x55, 0x53, 0x4e, 0x10, 0x96, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x59, 0x49, 0x10,
	0x97, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x59, 0x55, 0x10, 0x98, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x55, 0x59, 0x57, 0x10, 0x99, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x5a, 0x53, 0x10, 0x9a, 0x01,
	0x12, 0x08, 0x0a, 0x03, 0x56, 0x45, 0x53, 0x10, 0x9b, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x56, 0x4e,
	0x44, 0x10, 0x9c, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x56, 0x55, 0x56, 0x10, 0x9d, 0x01, 0x12, 0x08,
	0x0a, 0x03, 0x57, 0x53, 0x54, 0x10, 0x9e, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x41, 0x46, 0x10,
	0x9f, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x41, 0x47, 0x10, 0xa0, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x58, 0x41, 0x55, 0x10, 0xa1, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x42, 0x41, 0x10, 0xa2, 0x01,
	0x12, 0x08, 0x0a, 0x03, 0x58, 0x42, 0x42, 0x10, 0xa3, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x42,
	0x43, 0x10, 0xa4, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x42, 0x44, 0x10, 0xa5, 0x01, 0x12, 0x08,
	0x0a, 0x03, 0x58, 0x43, 0x44, 0x10, 0xa6, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x44, 0x52, 0x10,
	0xa7, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x4f, 0x46, 0x10, 0xa8, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x58, 0x50, 0x44, 0x10, 0xa9, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x50, 0x46, 0x10, 0xaa, 0x01,
	0x12, 0x08, 0x0a, 0x03, 0x58, 0x50, 0x54, 0x10, 0xab, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x53,
	0x55, 0x10, 0xac, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x54, 0x53, 0x10, 0xad, 0x01, 0x12, 0x08,
	0x0a, 0x03, 0x58, 0x55, 0x41, 0x10, 0xae, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x58, 0x58, 0x10,
	0xaf, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x59, 0x45, 0x52, 0x10, 0xb0, 0x01, 0x12, 0x08, 0x0a, 0x03,
	0x5a, 0x41, 0x52, 0x10, 0xb1, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x5a, 0x4d, 0x57, 0x10, 0xb2, 0x01,
	0x12, 0x08, 0x0a, 0x03, 0x5a, 0x57, 0x4c, 0x10, 0xb3, 0x01, 0x2a, 0x33, 0x0a, 0x0f, 0x42, 0x65,
	0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x0a, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x42,
	0x50, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f,
	0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x2d, 0x62, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f,
	0x67, 0x6f, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xaa,
	0x02, 0x1f, 0x50, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_nomenclatures_proto_rawDescOnce sync.Once
	file_common_nomenclatures_proto_rawDescData = file_common_nomenclatures_proto_rawDesc
)

func file_common_nomenclatures_proto_rawDescGZIP() []byte {
	file_common_nomenclatures_proto_rawDescOnce.Do(func() {
		file_common_nomenclatures_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_nomenclatures_proto_rawDescData)
	})
	return file_common_nomenclatures_proto_rawDescData
}

var file_common_nomenclatures_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_common_nomenclatures_proto_goTypes = []interface{}{
	(CampaignState)(0),   // 0: podkrepibg.common.nomenclatures.CampaignState
	(ISO2CountryCode)(0), // 1: podkrepibg.common.nomenclatures.ISO2CountryCode
	(CurrencyCode)(0),    // 2: podkrepibg.common.nomenclatures.CurrencyCode
	(BeneficiaryType)(0), // 3: podkrepibg.common.nomenclatures.BeneficiaryType
}
var file_common_nomenclatures_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_nomenclatures_proto_init() }
func file_common_nomenclatures_proto_init() {
	if File_common_nomenclatures_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_nomenclatures_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_nomenclatures_proto_goTypes,
		DependencyIndexes: file_common_nomenclatures_proto_depIdxs,
		EnumInfos:         file_common_nomenclatures_proto_enumTypes,
	}.Build()
	File_common_nomenclatures_proto = out.File
	file_common_nomenclatures_proto_rawDesc = nil
	file_common_nomenclatures_proto_goTypes = nil
	file_common_nomenclatures_proto_depIdxs = nil
}
