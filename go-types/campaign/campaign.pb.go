// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: campaign.proto

package campaign

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	common "github.com/podkrepi-bg/types/go-types/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BeneficiaryConnection int32

const (
	BeneficiaryConnection_BENEFICIARY_CONNECTION_UNSPECIFIED    BeneficiaryConnection = 0
	BeneficiaryConnection_BENEFICIARY_CONNECTION_CHILD          BeneficiaryConnection = 1
	BeneficiaryConnection_BENEFICIARY_CONNECTION_MOTHER         BeneficiaryConnection = 2
	BeneficiaryConnection_BENEFICIARY_CONNECTION_FATHER         BeneficiaryConnection = 3
	BeneficiaryConnection_BENEFICIARY_CONNECTION_SISTER         BeneficiaryConnection = 4
	BeneficiaryConnection_BENEFICIARY_CONNECTION_BROTHER        BeneficiaryConnection = 5
	BeneficiaryConnection_BENEFICIARY_CONNECTION_GRANDCHILD     BeneficiaryConnection = 6
	BeneficiaryConnection_BENEFICIARY_CONNECTION_GRANDPARENT    BeneficiaryConnection = 7
	BeneficiaryConnection_BENEFICIARY_CONNECTION_WIFE           BeneficiaryConnection = 8
	BeneficiaryConnection_BENEFICIARY_CONNECTION_HUSBAND        BeneficiaryConnection = 9
	BeneficiaryConnection_BENEFICIARY_CONNECTION_COUSIN         BeneficiaryConnection = 10
	BeneficiaryConnection_BENEFICIARY_CONNECTION_AUNT           BeneficiaryConnection = 11
	BeneficiaryConnection_BENEFICIARY_CONNECTION_UNCLE          BeneficiaryConnection = 12
	BeneficiaryConnection_BENEFICIARY_CONNECTION_OTHER_RELATIVE BeneficiaryConnection = 13
	BeneficiaryConnection_BENEFICIARY_CONNECTION_FRIEND         BeneficiaryConnection = 14
	BeneficiaryConnection_BENEFICIARY_CONNECTION_OTHER          BeneficiaryConnection = 15
)

// Enum value maps for BeneficiaryConnection.
var (
	BeneficiaryConnection_name = map[int32]string{
		0:  "BENEFICIARY_CONNECTION_UNSPECIFIED",
		1:  "BENEFICIARY_CONNECTION_CHILD",
		2:  "BENEFICIARY_CONNECTION_MOTHER",
		3:  "BENEFICIARY_CONNECTION_FATHER",
		4:  "BENEFICIARY_CONNECTION_SISTER",
		5:  "BENEFICIARY_CONNECTION_BROTHER",
		6:  "BENEFICIARY_CONNECTION_GRANDCHILD",
		7:  "BENEFICIARY_CONNECTION_GRANDPARENT",
		8:  "BENEFICIARY_CONNECTION_WIFE",
		9:  "BENEFICIARY_CONNECTION_HUSBAND",
		10: "BENEFICIARY_CONNECTION_COUSIN",
		11: "BENEFICIARY_CONNECTION_AUNT",
		12: "BENEFICIARY_CONNECTION_UNCLE",
		13: "BENEFICIARY_CONNECTION_OTHER_RELATIVE",
		14: "BENEFICIARY_CONNECTION_FRIEND",
		15: "BENEFICIARY_CONNECTION_OTHER",
	}
	BeneficiaryConnection_value = map[string]int32{
		"BENEFICIARY_CONNECTION_UNSPECIFIED":    0,
		"BENEFICIARY_CONNECTION_CHILD":          1,
		"BENEFICIARY_CONNECTION_MOTHER":         2,
		"BENEFICIARY_CONNECTION_FATHER":         3,
		"BENEFICIARY_CONNECTION_SISTER":         4,
		"BENEFICIARY_CONNECTION_BROTHER":        5,
		"BENEFICIARY_CONNECTION_GRANDCHILD":     6,
		"BENEFICIARY_CONNECTION_GRANDPARENT":    7,
		"BENEFICIARY_CONNECTION_WIFE":           8,
		"BENEFICIARY_CONNECTION_HUSBAND":        9,
		"BENEFICIARY_CONNECTION_COUSIN":         10,
		"BENEFICIARY_CONNECTION_AUNT":           11,
		"BENEFICIARY_CONNECTION_UNCLE":          12,
		"BENEFICIARY_CONNECTION_OTHER_RELATIVE": 13,
		"BENEFICIARY_CONNECTION_FRIEND":         14,
		"BENEFICIARY_CONNECTION_OTHER":          15,
	}
)

func (x BeneficiaryConnection) Enum() *BeneficiaryConnection {
	p := new(BeneficiaryConnection)
	*p = x
	return p
}

func (x BeneficiaryConnection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BeneficiaryConnection) Descriptor() protoreflect.EnumDescriptor {
	return file_campaign_proto_enumTypes[0].Descriptor()
}

func (BeneficiaryConnection) Type() protoreflect.EnumType {
	return &file_campaign_proto_enumTypes[0]
}

func (x BeneficiaryConnection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BeneficiaryConnection.Descriptor instead.
func (BeneficiaryConnection) EnumDescriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{0}
}

type CreateCampaignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiatorId    string `protobuf:"bytes,1,opt,name=initiator_id,json=initiatorId,proto3" json:"initiator_id,omitempty"`
	OperatorId     string `protobuf:"bytes,2,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	BeneficiaryId  string `protobuf:"bytes,3,opt,name=beneficiary_id,json=beneficiaryId,proto3" json:"beneficiary_id,omitempty"`
	Title          string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	CampaignTypeId string `protobuf:"bytes,5,opt,name=campaign_type_id,json=campaignTypeId,proto3" json:"campaign_type_id,omitempty"`
}

func (x *CreateCampaignRequest) Reset() {
	*x = CreateCampaignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignRequest) ProtoMessage() {}

func (x *CreateCampaignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignRequest.ProtoReflect.Descriptor instead.
func (*CreateCampaignRequest) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCampaignRequest) GetInitiatorId() string {
	if x != nil {
		return x.InitiatorId
	}
	return ""
}

func (x *CreateCampaignRequest) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *CreateCampaignRequest) GetBeneficiaryId() string {
	if x != nil {
		return x.BeneficiaryId
	}
	return ""
}

func (x *CreateCampaignRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateCampaignRequest) GetCampaignTypeId() string {
	if x != nil {
		return x.CampaignTypeId
	}
	return ""
}

type CreateCampaignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCampaignResponse) Reset() {
	*x = CreateCampaignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignResponse) ProtoMessage() {}

func (x *CreateCampaignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignResponse.ProtoReflect.Descriptor instead.
func (*CreateCampaignResponse) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCampaignResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListCampaignsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCampaignsRequest) Reset() {
	*x = ListCampaignsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsRequest) ProtoMessage() {}

func (x *ListCampaignsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsRequest.ProtoReflect.Descriptor instead.
func (*ListCampaignsRequest) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{2}
}

type FilterCampaignsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignTypeId    string               `protobuf:"bytes,1,opt,name=campaign_type_id,json=campaignTypeId,proto3" json:"campaign_type_id,omitempty"`
	CampaignSubtypeId string               `protobuf:"bytes,2,opt,name=campaign_subtype_id,json=campaignSubtypeId,proto3" json:"campaign_subtype_id,omitempty"`
	State             common.CampaignState `protobuf:"varint,3,opt,name=state,proto3,enum=podkrepibg.common.nomenclatures.CampaignState" json:"state,omitempty"`
	OperatorId        string               `protobuf:"bytes,4,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	InitiatorId       string               `protobuf:"bytes,5,opt,name=initiator_id,json=initiatorId,proto3" json:"initiator_id,omitempty"`
	BeneficiaryId     string               `protobuf:"bytes,6,opt,name=beneficiary_id,json=beneficiaryId,proto3" json:"beneficiary_id,omitempty"`
}

func (x *FilterCampaignsRequest) Reset() {
	*x = FilterCampaignsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterCampaignsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterCampaignsRequest) ProtoMessage() {}

func (x *FilterCampaignsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterCampaignsRequest.ProtoReflect.Descriptor instead.
func (*FilterCampaignsRequest) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{3}
}

func (x *FilterCampaignsRequest) GetCampaignTypeId() string {
	if x != nil {
		return x.CampaignTypeId
	}
	return ""
}

func (x *FilterCampaignsRequest) GetCampaignSubtypeId() string {
	if x != nil {
		return x.CampaignSubtypeId
	}
	return ""
}

func (x *FilterCampaignsRequest) GetState() common.CampaignState {
	if x != nil {
		return x.State
	}
	return common.CampaignState_CAMPAIGN_STATE_UNSPECIFIED
}

func (x *FilterCampaignsRequest) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *FilterCampaignsRequest) GetInitiatorId() string {
	if x != nil {
		return x.InitiatorId
	}
	return ""
}

func (x *FilterCampaignsRequest) GetBeneficiaryId() string {
	if x != nil {
		return x.BeneficiaryId
	}
	return ""
}

type CampaignsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaigns []*Campaign `protobuf:"bytes,1,rep,name=campaigns,proto3" json:"campaigns,omitempty"`
}

func (x *CampaignsResponse) Reset() {
	*x = CampaignsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignsResponse) ProtoMessage() {}

func (x *CampaignsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignsResponse.ProtoReflect.Descriptor instead.
func (*CampaignsResponse) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{4}
}

func (x *CampaignsResponse) GetCampaigns() []*Campaign {
	if x != nil {
		return x.Campaigns
	}
	return nil
}

type GetCampaignDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCampaignDetailsRequest) Reset() {
	*x = GetCampaignDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignDetailsRequest) ProtoMessage() {}

func (x *GetCampaignDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetCampaignDetailsRequest) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{5}
}

func (x *GetCampaignDetailsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateCampaignTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateCampaignTypeRequest) Reset() {
	*x = CreateCampaignTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignTypeRequest) ProtoMessage() {}

func (x *CreateCampaignTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateCampaignTypeRequest) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCampaignTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCampaignTypeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateCampaignTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCampaignTypeResponse) Reset() {
	*x = CreateCampaignTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignTypeResponse) ProtoMessage() {}

func (x *CreateCampaignTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignTypeResponse.ProtoReflect.Descriptor instead.
func (*CreateCampaignTypeResponse) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCampaignTypeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CampaignTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignTypes []*CampaignTypeDetails `protobuf:"bytes,1,rep,name=campaign_types,json=campaignTypes,proto3" json:"campaign_types,omitempty"`
}

func (x *CampaignTypesResponse) Reset() {
	*x = CampaignTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignTypesResponse) ProtoMessage() {}

func (x *CampaignTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignTypesResponse.ProtoReflect.Descriptor instead.
func (*CampaignTypesResponse) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{8}
}

func (x *CampaignTypesResponse) GetCampaignTypes() []*CampaignTypeDetails {
	if x != nil {
		return x.CampaignTypes
	}
	return nil
}

type CreateBeneficiaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DateOfBirth               *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Type                      common.BeneficiaryType `protobuf:"varint,3,opt,name=type,proto3,enum=podkrepibg.common.nomenclatures.BeneficiaryType" json:"type,omitempty"`
	OrganizerId               string                 `protobuf:"bytes,4,opt,name=organizer_id,json=organizerId,proto3" json:"organizer_id,omitempty"`
	CountryIsoCode            common.CountryCode     `protobuf:"varint,5,opt,name=country_iso_code,json=countryIsoCode,proto3,enum=podkrepibg.common.nomenclatures.CountryCode" json:"country_iso_code,omitempty"`
	City                      common.City            `protobuf:"varint,6,opt,name=city,proto3,enum=podkrepibg.common.nomenclatures.City" json:"city,omitempty"`
	Email                     string                 `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Phone                     string                 `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`
	Website                   string                 `protobuf:"bytes,9,opt,name=website,proto3" json:"website,omitempty"`
	Address                   string                 `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	ConnectionWithBeneficiary BeneficiaryConnection  `protobuf:"varint,11,opt,name=connection_with_beneficiary,json=connectionWithBeneficiary,proto3,enum=podkrepibg.campaign.BeneficiaryConnection" json:"connection_with_beneficiary,omitempty"`
}

func (x *CreateBeneficiaryRequest) Reset() {
	*x = CreateBeneficiaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBeneficiaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBeneficiaryRequest) ProtoMessage() {}

func (x *CreateBeneficiaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBeneficiaryRequest.ProtoReflect.Descriptor instead.
func (*CreateBeneficiaryRequest) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{9}
}

func (x *CreateBeneficiaryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBeneficiaryRequest) GetDateOfBirth() *timestamp.Timestamp {
	if x != nil {
		return x.DateOfBirth
	}
	return nil
}

func (x *CreateBeneficiaryRequest) GetType() common.BeneficiaryType {
	if x != nil {
		return x.Type
	}
	return common.BeneficiaryType_BENEFICIARY_TYPE_UNSPECIFIED
}

func (x *CreateBeneficiaryRequest) GetOrganizerId() string {
	if x != nil {
		return x.OrganizerId
	}
	return ""
}

func (x *CreateBeneficiaryRequest) GetCountryIsoCode() common.CountryCode {
	if x != nil {
		return x.CountryIsoCode
	}
	return common.CountryCode_COUNTRY_CODE_UNSPECIFIED
}

func (x *CreateBeneficiaryRequest) GetCity() common.City {
	if x != nil {
		return x.City
	}
	return common.City_CITY_UNSPECIFIED
}

func (x *CreateBeneficiaryRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateBeneficiaryRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateBeneficiaryRequest) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *CreateBeneficiaryRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateBeneficiaryRequest) GetConnectionWithBeneficiary() BeneficiaryConnection {
	if x != nil {
		return x.ConnectionWithBeneficiary
	}
	return BeneficiaryConnection_BENEFICIARY_CONNECTION_UNSPECIFIED
}

type CreateBeneficiaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateBeneficiaryResponse) Reset() {
	*x = CreateBeneficiaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBeneficiaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBeneficiaryResponse) ProtoMessage() {}

func (x *CreateBeneficiaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBeneficiaryResponse.ProtoReflect.Descriptor instead.
func (*CreateBeneficiaryResponse) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{10}
}

func (x *CreateBeneficiaryResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CampaignType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CampaignType) Reset() {
	*x = CampaignType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignType) ProtoMessage() {}

func (x *CampaignType) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignType.ProtoReflect.Descriptor instead.
func (*CampaignType) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{11}
}

func (x *CampaignType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CampaignType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CampaignTypeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                    `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Subtypes    []*CampaignSubtypeDetails `protobuf:"bytes,4,rep,name=subtypes,proto3" json:"subtypes,omitempty"`
}

func (x *CampaignTypeDetails) Reset() {
	*x = CampaignTypeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignTypeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignTypeDetails) ProtoMessage() {}

func (x *CampaignTypeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignTypeDetails.ProtoReflect.Descriptor instead.
func (*CampaignTypeDetails) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{12}
}

func (x *CampaignTypeDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CampaignTypeDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CampaignTypeDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CampaignTypeDetails) GetSubtypes() []*CampaignSubtypeDetails {
	if x != nil {
		return x.Subtypes
	}
	return nil
}

type CampaignSubtype struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CampaignSubtype) Reset() {
	*x = CampaignSubtype{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignSubtype) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignSubtype) ProtoMessage() {}

func (x *CampaignSubtype) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignSubtype.ProtoReflect.Descriptor instead.
func (*CampaignSubtype) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{13}
}

func (x *CampaignSubtype) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CampaignSubtype) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CampaignSubtypeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CampaignSubtypeDetails) Reset() {
	*x = CampaignSubtypeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignSubtypeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignSubtypeDetails) ProtoMessage() {}

func (x *CampaignSubtypeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignSubtypeDetails.ProtoReflect.Descriptor instead.
func (*CampaignSubtypeDetails) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{14}
}

func (x *CampaignSubtypeDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CampaignSubtypeDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CampaignSubtypeDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Campaign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InitiatorId      string               `protobuf:"bytes,2,opt,name=initiator_id,json=initiatorId,proto3" json:"initiator_id,omitempty"`
	OperatorId       string               `protobuf:"bytes,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	BeneficiaryId    string               `protobuf:"bytes,4,opt,name=beneficiary_id,json=beneficiaryId,proto3" json:"beneficiary_id,omitempty"`
	State            common.CampaignState `protobuf:"varint,5,opt,name=state,proto3,enum=podkrepibg.common.nomenclatures.CampaignState" json:"state,omitempty"`
	CampaignType     *CampaignType        `protobuf:"bytes,6,opt,name=campaign_type,json=campaignType,proto3" json:"campaign_type,omitempty"`
	CampaignSubtype  *CampaignSubtype     `protobuf:"bytes,7,opt,name=campaign_subtype,json=campaignSubtype,proto3" json:"campaign_subtype,omitempty"`
	Title            string               `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	ShortDescription string               `protobuf:"bytes,9,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	TargetAmount     uint32               `protobuf:"varint,11,opt,name=target_amount,json=targetAmount,proto3" json:"target_amount,omitempty"`
	Currency         common.CurrencyCode  `protobuf:"varint,12,opt,name=currency,proto3,enum=podkrepibg.common.nomenclatures.CurrencyCode" json:"currency,omitempty"`
	RaisedFunds      uint32               `protobuf:"varint,13,opt,name=raised_funds,json=raisedFunds,proto3" json:"raised_funds,omitempty"`
	PayedOut         uint32               `protobuf:"varint,14,opt,name=payed_out,json=payedOut,proto3" json:"payed_out,omitempty"`
}

func (x *Campaign) Reset() {
	*x = Campaign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Campaign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Campaign) ProtoMessage() {}

func (x *Campaign) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Campaign.ProtoReflect.Descriptor instead.
func (*Campaign) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{15}
}

func (x *Campaign) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Campaign) GetInitiatorId() string {
	if x != nil {
		return x.InitiatorId
	}
	return ""
}

func (x *Campaign) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *Campaign) GetBeneficiaryId() string {
	if x != nil {
		return x.BeneficiaryId
	}
	return ""
}

func (x *Campaign) GetState() common.CampaignState {
	if x != nil {
		return x.State
	}
	return common.CampaignState_CAMPAIGN_STATE_UNSPECIFIED
}

func (x *Campaign) GetCampaignType() *CampaignType {
	if x != nil {
		return x.CampaignType
	}
	return nil
}

func (x *Campaign) GetCampaignSubtype() *CampaignSubtype {
	if x != nil {
		return x.CampaignSubtype
	}
	return nil
}

func (x *Campaign) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Campaign) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Campaign) GetTargetAmount() uint32 {
	if x != nil {
		return x.TargetAmount
	}
	return 0
}

func (x *Campaign) GetCurrency() common.CurrencyCode {
	if x != nil {
		return x.Currency
	}
	return common.CurrencyCode_CURRENCY_CODE_UNSPECIFIED
}

func (x *Campaign) GetRaisedFunds() uint32 {
	if x != nil {
		return x.RaisedFunds
	}
	return 0
}

func (x *Campaign) GetPayedOut() uint32 {
	if x != nil {
		return x.PayedOut
	}
	return 0
}

type CampaignDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InitiatorId      string               `protobuf:"bytes,2,opt,name=initiator_id,json=initiatorId,proto3" json:"initiator_id,omitempty"`
	OperatorId       string               `protobuf:"bytes,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	BeneficiaryId    string               `protobuf:"bytes,4,opt,name=beneficiary_id,json=beneficiaryId,proto3" json:"beneficiary_id,omitempty"`
	State            common.CampaignState `protobuf:"varint,5,opt,name=state,proto3,enum=podkrepibg.common.nomenclatures.CampaignState" json:"state,omitempty"`
	CampaignType     *CampaignType        `protobuf:"bytes,6,opt,name=campaign_type,json=campaignType,proto3" json:"campaign_type,omitempty"`
	CampaignSubtype  *CampaignSubtype     `protobuf:"bytes,7,opt,name=campaign_subtype,json=campaignSubtype,proto3" json:"campaign_subtype,omitempty"`
	Title            string               `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	ShortDescription string               `protobuf:"bytes,9,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	FullDescription  string               `protobuf:"bytes,10,opt,name=full_description,json=fullDescription,proto3" json:"full_description,omitempty"`
	TargetAmount     uint32               `protobuf:"varint,11,opt,name=target_amount,json=targetAmount,proto3" json:"target_amount,omitempty"`
	Currency         common.CurrencyCode  `protobuf:"varint,12,opt,name=currency,proto3,enum=podkrepibg.common.nomenclatures.CurrencyCode" json:"currency,omitempty"`
	RaisedFunds      uint32               `protobuf:"varint,13,opt,name=raised_funds,json=raisedFunds,proto3" json:"raised_funds,omitempty"`
	PayedOut         uint32               `protobuf:"varint,14,opt,name=payed_out,json=payedOut,proto3" json:"payed_out,omitempty"`
	Donations        []*Donation          `protobuf:"bytes,15,rep,name=donations,proto3" json:"donations,omitempty"`
}

func (x *CampaignDetails) Reset() {
	*x = CampaignDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignDetails) ProtoMessage() {}

func (x *CampaignDetails) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignDetails.ProtoReflect.Descriptor instead.
func (*CampaignDetails) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{16}
}

func (x *CampaignDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CampaignDetails) GetInitiatorId() string {
	if x != nil {
		return x.InitiatorId
	}
	return ""
}

func (x *CampaignDetails) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *CampaignDetails) GetBeneficiaryId() string {
	if x != nil {
		return x.BeneficiaryId
	}
	return ""
}

func (x *CampaignDetails) GetState() common.CampaignState {
	if x != nil {
		return x.State
	}
	return common.CampaignState_CAMPAIGN_STATE_UNSPECIFIED
}

func (x *CampaignDetails) GetCampaignType() *CampaignType {
	if x != nil {
		return x.CampaignType
	}
	return nil
}

func (x *CampaignDetails) GetCampaignSubtype() *CampaignSubtype {
	if x != nil {
		return x.CampaignSubtype
	}
	return nil
}

func (x *CampaignDetails) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CampaignDetails) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *CampaignDetails) GetFullDescription() string {
	if x != nil {
		return x.FullDescription
	}
	return ""
}

func (x *CampaignDetails) GetTargetAmount() uint32 {
	if x != nil {
		return x.TargetAmount
	}
	return 0
}

func (x *CampaignDetails) GetCurrency() common.CurrencyCode {
	if x != nil {
		return x.Currency
	}
	return common.CurrencyCode_CURRENCY_CODE_UNSPECIFIED
}

func (x *CampaignDetails) GetRaisedFunds() uint32 {
	if x != nil {
		return x.RaisedFunds
	}
	return 0
}

func (x *CampaignDetails) GetPayedOut() uint32 {
	if x != nil {
		return x.PayedOut
	}
	return 0
}

func (x *CampaignDetails) GetDonations() []*Donation {
	if x != nil {
		return x.Donations
	}
	return nil
}

type Donation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DonorDisplayName string               `protobuf:"bytes,1,opt,name=donor_display_name,json=donorDisplayName,proto3" json:"donor_display_name,omitempty"`
	Amount           uint32               `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Message          string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Date             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Donation) Reset() {
	*x = Donation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Donation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Donation) ProtoMessage() {}

func (x *Donation) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Donation.ProtoReflect.Descriptor instead.
func (*Donation) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{17}
}

func (x *Donation) GetDonorDisplayName() string {
	if x != nil {
		return x.DonorDisplayName
	}
	return ""
}

func (x *Donation) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Donation) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Donation) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type Beneficiary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                      string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DateOfBirth               *timestamp.Timestamp          `protobuf:"bytes,3,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Type                      common.BeneficiaryType        `protobuf:"varint,4,opt,name=type,proto3,enum=podkrepibg.common.nomenclatures.BeneficiaryType" json:"type,omitempty"`
	OrganizerId               string                        `protobuf:"bytes,5,opt,name=organizer_id,json=organizerId,proto3" json:"organizer_id,omitempty"`
	CountryIsoCode            common.CountryCode            `protobuf:"varint,6,opt,name=country_iso_code,json=countryIsoCode,proto3,enum=podkrepibg.common.nomenclatures.CountryCode" json:"country_iso_code,omitempty"`
	City                      common.City                   `protobuf:"varint,7,opt,name=city,proto3,enum=podkrepibg.common.nomenclatures.City" json:"city,omitempty"`
	Email                     string                        `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Phone                     string                        `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone,omitempty"`
	AdditionalDetails         *BeneficiaryAdditionalDetails `protobuf:"bytes,10,opt,name=additional_details,json=additionalDetails,proto3" json:"additional_details,omitempty"`
	Address                   string                        `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`
	ConnectionWithBeneficiary BeneficiaryConnection         `protobuf:"varint,12,opt,name=connection_with_beneficiary,json=connectionWithBeneficiary,proto3,enum=podkrepibg.campaign.BeneficiaryConnection" json:"connection_with_beneficiary,omitempty"`
}

func (x *Beneficiary) Reset() {
	*x = Beneficiary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Beneficiary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Beneficiary) ProtoMessage() {}

func (x *Beneficiary) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Beneficiary.ProtoReflect.Descriptor instead.
func (*Beneficiary) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{18}
}

func (x *Beneficiary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Beneficiary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Beneficiary) GetDateOfBirth() *timestamp.Timestamp {
	if x != nil {
		return x.DateOfBirth
	}
	return nil
}

func (x *Beneficiary) GetType() common.BeneficiaryType {
	if x != nil {
		return x.Type
	}
	return common.BeneficiaryType_BENEFICIARY_TYPE_UNSPECIFIED
}

func (x *Beneficiary) GetOrganizerId() string {
	if x != nil {
		return x.OrganizerId
	}
	return ""
}

func (x *Beneficiary) GetCountryIsoCode() common.CountryCode {
	if x != nil {
		return x.CountryIsoCode
	}
	return common.CountryCode_COUNTRY_CODE_UNSPECIFIED
}

func (x *Beneficiary) GetCity() common.City {
	if x != nil {
		return x.City
	}
	return common.City_CITY_UNSPECIFIED
}

func (x *Beneficiary) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Beneficiary) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Beneficiary) GetAdditionalDetails() *BeneficiaryAdditionalDetails {
	if x != nil {
		return x.AdditionalDetails
	}
	return nil
}

func (x *Beneficiary) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Beneficiary) GetConnectionWithBeneficiary() BeneficiaryConnection {
	if x != nil {
		return x.ConnectionWithBeneficiary
	}
	return BeneficiaryConnection_BENEFICIARY_CONNECTION_UNSPECIFIED
}

type BeneficiaryAdditionalDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Website string `protobuf:"bytes,1,opt,name=website,proto3" json:"website,omitempty"`
}

func (x *BeneficiaryAdditionalDetails) Reset() {
	*x = BeneficiaryAdditionalDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaign_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeneficiaryAdditionalDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeneficiaryAdditionalDetails) ProtoMessage() {}

func (x *BeneficiaryAdditionalDetails) ProtoReflect() protoreflect.Message {
	mi := &file_campaign_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeneficiaryAdditionalDetails.ProtoReflect.Descriptor instead.
func (*BeneficiaryAdditionalDetails) Descriptor() ([]byte, []int) {
	return file_campaign_proto_rawDescGZIP(), []int{19}
}

func (x *BeneficiaryAdditionalDetails) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

var File_campaign_proto protoreflect.FileDescriptor

var file_campaign_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x6f,
	0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc2, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x16, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x70, 0x6f, 0x64,
	0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6e,
	0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x11,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62,
	0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x52, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x2b,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2c,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x15,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0xb6, 0x04, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69,
	0x62, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x56, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x73, 0x6f, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x70, 0x6f, 0x64,
	0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6e,
	0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x49, 0x73, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70,
	0x69, 0x62, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e,
	0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x6a, 0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72,
	0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x19, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x22,
	0x2b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x0c,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xa4, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53,
	0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0f, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5e,
	0x0a, 0x16, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd7,
	0x04, 0x0a, 0x08, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69,
	0x62, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x0d,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x5f, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x75, 0x62,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x49, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x69, 0x73,
	0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x72, 0x61, 0x69, 0x73, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x79, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x61, 0x79, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x22, 0xc6, 0x05, 0x0a, 0x0f, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70,
	0x69, 0x62, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e,
	0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a,
	0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62,
	0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53,
	0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x70, 0x6f,
	0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x66,
	0x75, 0x6e, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x61, 0x69, 0x73,
	0x65, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x65, 0x64,
	0x5f, 0x6f, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x79, 0x65,
	0x64, 0x4f, 0x75, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65,
	0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x44, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x9a, 0x01, 0x0a, 0x08, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c,
	0x0a, 0x12, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x6f, 0x6e, 0x6f,
	0x72, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x81,
	0x05, 0x0a, 0x0b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x12, 0x44, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x10, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x73, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69,
	0x62, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x73, 0x6f, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x60, 0x0a, 0x12, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70,
	0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x42, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x6a, 0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x6f,
	0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x19, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x22, 0x38, 0x0a, 0x1c, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x2a, 0xd8, 0x04, 0x0a,
	0x15, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x22, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49,
	0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20,
	0x0a, 0x1c, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x10, 0x01,
	0x12, 0x21, 0x0a, 0x1d, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x54, 0x48, 0x45,
	0x52, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41,
	0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41,
	0x54, 0x48, 0x45, 0x52, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49,
	0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x49, 0x53, 0x54, 0x45, 0x52, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x42, 0x45, 0x4e,
	0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x52, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x05, 0x12, 0x25, 0x0a,
	0x21, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x43, 0x48, 0x49,
	0x4c, 0x44, 0x10, 0x06, 0x12, 0x26, 0x0a, 0x22, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49,
	0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47,
	0x52, 0x41, 0x4e, 0x44, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b,
	0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x49, 0x46, 0x45, 0x10, 0x08, 0x12, 0x22, 0x0a,
	0x1e, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x55, 0x53, 0x42, 0x41, 0x4e, 0x44, 0x10,
	0x09, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52, 0x59,
	0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x55, 0x53,
	0x49, 0x4e, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49,
	0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x55, 0x4e, 0x54, 0x10, 0x0b, 0x12, 0x20, 0x0a, 0x1c, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43,
	0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x55, 0x4e, 0x43, 0x4c, 0x45, 0x10, 0x0c, 0x12, 0x29, 0x0a, 0x25, 0x42, 0x45, 0x4e, 0x45, 0x46,
	0x49, 0x43, 0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x0d, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43, 0x49, 0x41, 0x52,
	0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x49,
	0x45, 0x4e, 0x44, 0x10, 0x0e, 0x12, 0x20, 0x0a, 0x1c, 0x42, 0x45, 0x4e, 0x45, 0x46, 0x49, 0x43,
	0x49, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x0f, 0x32, 0xf8, 0x05, 0x0a, 0x0f, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x2a, 0x2e,
	0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x6f, 0x64, 0x6b,
	0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65,
	0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x2b, 0x2e,
	0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x6f, 0x64,
	0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72,
	0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72,
	0x65, 0x70, 0x69, 0x62, 0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x75,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62,
	0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62,
	0x67, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x72, 0x79, 0x12, 0x2d, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62, 0x67, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x54, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x2d, 0x62, 0x67, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0xaa, 0x02, 0x21, 0x50, 0x6f, 0x64, 0x6b, 0x72, 0x65, 0x70, 0x69, 0x62,
	0x67, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_campaign_proto_rawDescOnce sync.Once
	file_campaign_proto_rawDescData = file_campaign_proto_rawDesc
)

func file_campaign_proto_rawDescGZIP() []byte {
	file_campaign_proto_rawDescOnce.Do(func() {
		file_campaign_proto_rawDescData = protoimpl.X.CompressGZIP(file_campaign_proto_rawDescData)
	})
	return file_campaign_proto_rawDescData
}

var file_campaign_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_campaign_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_campaign_proto_goTypes = []interface{}{
	(BeneficiaryConnection)(0),           // 0: podkrepibg.campaign.BeneficiaryConnection
	(*CreateCampaignRequest)(nil),        // 1: podkrepibg.campaign.CreateCampaignRequest
	(*CreateCampaignResponse)(nil),       // 2: podkrepibg.campaign.CreateCampaignResponse
	(*ListCampaignsRequest)(nil),         // 3: podkrepibg.campaign.ListCampaignsRequest
	(*FilterCampaignsRequest)(nil),       // 4: podkrepibg.campaign.FilterCampaignsRequest
	(*CampaignsResponse)(nil),            // 5: podkrepibg.campaign.CampaignsResponse
	(*GetCampaignDetailsRequest)(nil),    // 6: podkrepibg.campaign.GetCampaignDetailsRequest
	(*CreateCampaignTypeRequest)(nil),    // 7: podkrepibg.campaign.CreateCampaignTypeRequest
	(*CreateCampaignTypeResponse)(nil),   // 8: podkrepibg.campaign.CreateCampaignTypeResponse
	(*CampaignTypesResponse)(nil),        // 9: podkrepibg.campaign.CampaignTypesResponse
	(*CreateBeneficiaryRequest)(nil),     // 10: podkrepibg.campaign.CreateBeneficiaryRequest
	(*CreateBeneficiaryResponse)(nil),    // 11: podkrepibg.campaign.CreateBeneficiaryResponse
	(*CampaignType)(nil),                 // 12: podkrepibg.campaign.CampaignType
	(*CampaignTypeDetails)(nil),          // 13: podkrepibg.campaign.CampaignTypeDetails
	(*CampaignSubtype)(nil),              // 14: podkrepibg.campaign.CampaignSubtype
	(*CampaignSubtypeDetails)(nil),       // 15: podkrepibg.campaign.CampaignSubtypeDetails
	(*Campaign)(nil),                     // 16: podkrepibg.campaign.Campaign
	(*CampaignDetails)(nil),              // 17: podkrepibg.campaign.CampaignDetails
	(*Donation)(nil),                     // 18: podkrepibg.campaign.Donation
	(*Beneficiary)(nil),                  // 19: podkrepibg.campaign.Beneficiary
	(*BeneficiaryAdditionalDetails)(nil), // 20: podkrepibg.campaign.BeneficiaryAdditionalDetails
	(common.CampaignState)(0),            // 21: podkrepibg.common.nomenclatures.CampaignState
	(*timestamp.Timestamp)(nil),          // 22: google.protobuf.Timestamp
	(common.BeneficiaryType)(0),          // 23: podkrepibg.common.nomenclatures.BeneficiaryType
	(common.CountryCode)(0),              // 24: podkrepibg.common.nomenclatures.CountryCode
	(common.City)(0),                     // 25: podkrepibg.common.nomenclatures.City
	(common.CurrencyCode)(0),             // 26: podkrepibg.common.nomenclatures.CurrencyCode
	(*empty.Empty)(nil),                  // 27: google.protobuf.Empty
}
var file_campaign_proto_depIdxs = []int32{
	21, // 0: podkrepibg.campaign.FilterCampaignsRequest.state:type_name -> podkrepibg.common.nomenclatures.CampaignState
	16, // 1: podkrepibg.campaign.CampaignsResponse.campaigns:type_name -> podkrepibg.campaign.Campaign
	13, // 2: podkrepibg.campaign.CampaignTypesResponse.campaign_types:type_name -> podkrepibg.campaign.CampaignTypeDetails
	22, // 3: podkrepibg.campaign.CreateBeneficiaryRequest.date_of_birth:type_name -> google.protobuf.Timestamp
	23, // 4: podkrepibg.campaign.CreateBeneficiaryRequest.type:type_name -> podkrepibg.common.nomenclatures.BeneficiaryType
	24, // 5: podkrepibg.campaign.CreateBeneficiaryRequest.country_iso_code:type_name -> podkrepibg.common.nomenclatures.CountryCode
	25, // 6: podkrepibg.campaign.CreateBeneficiaryRequest.city:type_name -> podkrepibg.common.nomenclatures.City
	0,  // 7: podkrepibg.campaign.CreateBeneficiaryRequest.connection_with_beneficiary:type_name -> podkrepibg.campaign.BeneficiaryConnection
	15, // 8: podkrepibg.campaign.CampaignTypeDetails.subtypes:type_name -> podkrepibg.campaign.CampaignSubtypeDetails
	21, // 9: podkrepibg.campaign.Campaign.state:type_name -> podkrepibg.common.nomenclatures.CampaignState
	12, // 10: podkrepibg.campaign.Campaign.campaign_type:type_name -> podkrepibg.campaign.CampaignType
	14, // 11: podkrepibg.campaign.Campaign.campaign_subtype:type_name -> podkrepibg.campaign.CampaignSubtype
	26, // 12: podkrepibg.campaign.Campaign.currency:type_name -> podkrepibg.common.nomenclatures.CurrencyCode
	21, // 13: podkrepibg.campaign.CampaignDetails.state:type_name -> podkrepibg.common.nomenclatures.CampaignState
	12, // 14: podkrepibg.campaign.CampaignDetails.campaign_type:type_name -> podkrepibg.campaign.CampaignType
	14, // 15: podkrepibg.campaign.CampaignDetails.campaign_subtype:type_name -> podkrepibg.campaign.CampaignSubtype
	26, // 16: podkrepibg.campaign.CampaignDetails.currency:type_name -> podkrepibg.common.nomenclatures.CurrencyCode
	18, // 17: podkrepibg.campaign.CampaignDetails.donations:type_name -> podkrepibg.campaign.Donation
	22, // 18: podkrepibg.campaign.Donation.date:type_name -> google.protobuf.Timestamp
	22, // 19: podkrepibg.campaign.Beneficiary.date_of_birth:type_name -> google.protobuf.Timestamp
	23, // 20: podkrepibg.campaign.Beneficiary.type:type_name -> podkrepibg.common.nomenclatures.BeneficiaryType
	24, // 21: podkrepibg.campaign.Beneficiary.country_iso_code:type_name -> podkrepibg.common.nomenclatures.CountryCode
	25, // 22: podkrepibg.campaign.Beneficiary.city:type_name -> podkrepibg.common.nomenclatures.City
	20, // 23: podkrepibg.campaign.Beneficiary.additional_details:type_name -> podkrepibg.campaign.BeneficiaryAdditionalDetails
	0,  // 24: podkrepibg.campaign.Beneficiary.connection_with_beneficiary:type_name -> podkrepibg.campaign.BeneficiaryConnection
	1,  // 25: podkrepibg.campaign.CampaignService.CreateCampaign:input_type -> podkrepibg.campaign.CreateCampaignRequest
	3,  // 26: podkrepibg.campaign.CampaignService.ListCampaigns:input_type -> podkrepibg.campaign.ListCampaignsRequest
	4,  // 27: podkrepibg.campaign.CampaignService.FilterCampaigns:input_type -> podkrepibg.campaign.FilterCampaignsRequest
	6,  // 28: podkrepibg.campaign.CampaignService.GetCampaignDetails:input_type -> podkrepibg.campaign.GetCampaignDetailsRequest
	7,  // 29: podkrepibg.campaign.CampaignService.CreateCampaignType:input_type -> podkrepibg.campaign.CreateCampaignTypeRequest
	27, // 30: podkrepibg.campaign.CampaignService.ListCampaignTypes:input_type -> google.protobuf.Empty
	10, // 31: podkrepibg.campaign.CampaignService.CreateBeneficiary:input_type -> podkrepibg.campaign.CreateBeneficiaryRequest
	2,  // 32: podkrepibg.campaign.CampaignService.CreateCampaign:output_type -> podkrepibg.campaign.CreateCampaignResponse
	5,  // 33: podkrepibg.campaign.CampaignService.ListCampaigns:output_type -> podkrepibg.campaign.CampaignsResponse
	5,  // 34: podkrepibg.campaign.CampaignService.FilterCampaigns:output_type -> podkrepibg.campaign.CampaignsResponse
	17, // 35: podkrepibg.campaign.CampaignService.GetCampaignDetails:output_type -> podkrepibg.campaign.CampaignDetails
	8,  // 36: podkrepibg.campaign.CampaignService.CreateCampaignType:output_type -> podkrepibg.campaign.CreateCampaignTypeResponse
	9,  // 37: podkrepibg.campaign.CampaignService.ListCampaignTypes:output_type -> podkrepibg.campaign.CampaignTypesResponse
	11, // 38: podkrepibg.campaign.CampaignService.CreateBeneficiary:output_type -> podkrepibg.campaign.CreateBeneficiaryResponse
	32, // [32:39] is the sub-list for method output_type
	25, // [25:32] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_campaign_proto_init() }
func file_campaign_proto_init() {
	if File_campaign_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_campaign_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterCampaignsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBeneficiaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBeneficiaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignTypeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignSubtype); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignSubtypeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Campaign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Donation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Beneficiary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaign_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeneficiaryAdditionalDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_campaign_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_campaign_proto_goTypes,
		DependencyIndexes: file_campaign_proto_depIdxs,
		EnumInfos:         file_campaign_proto_enumTypes,
		MessageInfos:      file_campaign_proto_msgTypes,
	}.Build()
	File_campaign_proto = out.File
	file_campaign_proto_rawDesc = nil
	file_campaign_proto_goTypes = nil
	file_campaign_proto_depIdxs = nil
}
